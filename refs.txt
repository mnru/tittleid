./devdocs/ast.md	[`parse`]	(@ref)
./devdocs/ast.md	[`new`]	(@ref)
./devdocs/ast.md	[Proper maintenance and care of multi-threading locks]	(@ref)
./devdocs/backtraces.md	[Segfaults during bootstrap (`sysimg.jl`)]	(@ref)
./devdocs/backtraces.md	[Segfaults when running a script]	(@ref)
./devdocs/backtraces.md	[Errors during Julia startup]	(@ref)
./devdocs/backtraces.md	[Version/Environment info]	(@id dev-version-info)
./devdocs/backtraces.md	[version info]	(@ref dev-version-info)
./devdocs/backtraces.md	[Segfaults during bootstrap (`sysimg.jl`)]	(@ref)
./devdocs/backtraces.md	[version info]	(@ref dev-version-info)
./devdocs/backtraces.md	[version info]	(@ref dev-version-info)
./devdocs/cartesian.md	[reference section]	(@ref dev-cartesian-reference)
./devdocs/cartesian.md	[Macro reference]	(@id dev-cartesian-reference)
./devdocs/eval.md	[sysimg]	(@ref dev-sysimg)
./devdocs/eval.md	[parse]	(@ref dev-parsing)
./devdocs/eval.md	[`eval()`]	(@ref)
./devdocs/eval.md	[`eval()`]	(@ref)
./devdocs/eval.md	[expands]	(@ref dev-macro-expansion)
./devdocs/eval.md	[type inference]	(@ref dev-type-inference)
./devdocs/eval.md	[codegen]	(@ref dev-codegen)
./devdocs/eval.md	[`atexit()`]	(@ref)
./devdocs/eval.md	[Parsing]	(@id dev-parsing)
./devdocs/eval.md	[Macro Expansion]	(@id dev-macro-expansion)
./devdocs/eval.md	[`eval()`]	(@ref)
./devdocs/eval.md	[`eval()`]	(@ref)
./devdocs/eval.md	[`Meta.lower()`]	(@ref)
./devdocs/eval.md	[`macroexpand()`]	(@ref)
./devdocs/eval.md	[Type Inference]	(@id dev-type-inference)
./devdocs/eval.md	[JIT Code Generation]	(@id dev-codegen)
./devdocs/eval.md	[System Image]	(@id dev-sysimg)
./devdocs/functions.md	[`new`]	(@ref)
./devdocs/init.md	[Legacy `ios.c` library]	(@ref)
./devdocs/init.md	[Building the Julia system image]	(@ref)
./devdocs/init.md	[Building the Julia system image]	(@ref)
./devdocs/init.md	[Legacy `ios.c` library]	(@ref)
./devdocs/init.md	[`Base.ARGS`]	(@ref)
./devdocs/init.md	[`Base.eval()`]	(@ref eval)
./devdocs/init.md	[`Base.eval()`]	(@ref eval)
./devdocs/init.md	[`Base.println()`]	(@ref)
./devdocs/init.md	[`Base.print()`]	(@ref)
./devdocs/init.md	[Libuv wrappers for stdio]	(@ref)
./devdocs/init.md	[`ccall`]	(@ref)
./devdocs/object.md	[Embedding Julia]	(@ref)
./devdocs/object.md	[`isbits`]	(@ref)
./devdocs/object.md	[`Base.tuple()`]	(@ref)
./devdocs/object.md	[`isbits`]	(@ref)
./devdocs/object.md	[Singleton Types]	(@ref man-singleton-types)
./devdocs/object.md	[Nothingness and missing values]	(@ref)
./devdocs/offset-arrays.md	[`AbstractArray`]	(@ref)
./devdocs/offset-arrays.md	[`AbstractVector`]	(@ref)
./devdocs/offset-arrays.md	[`Integer`]	(@ref)
./devdocs/offset-arrays.md	[Abstract Arrays]	(@ref man-interface-array)
./devdocs/reflection.md	[`names(m::Module)`]	(@ref)
./devdocs/reflection.md	[`Symbol`]	(@ref)
./devdocs/reflection.md	[`fieldnames`]	(@ref)
./devdocs/reflection.md	[`Symbol`]	(@ref)
./devdocs/reflection.md	[`subtypes`]	(@ref)
./devdocs/reflection.md	[`AbstractFloat`]	(@ref)
./devdocs/reflection.md	[`subtypes`]	(@ref)
./devdocs/reflection.md	[`isbits(T::DataType)`]	(@ref)
./devdocs/reflection.md	[`fieldoffset(T::DataType, i::Integer)`]	(@ref)
./devdocs/reflection.md	[`methods`]	(@ref)
./devdocs/reflection.md	[`methodswith`]	(@ref)
./devdocs/reflection.md	[Metaprogramming]	(@ref)
./devdocs/reflection.md	[`macroexpand`]	(@ref)
./devdocs/reflection.md	[`dump`]	(@ref)
./devdocs/reflection.md	[`Meta.lower`]	(@ref)
./devdocs/reflection.md	[`code_lowered(f::Function, (Argtypes...))`]	(@ref)
./devdocs/reflection.md	[`code_typed(f::Function, (Argtypes...))`]	(@ref)
./devdocs/reflection.md	[`code_warntype(f::Function, (Argtypes...))`]	(@ref)
./devdocs/reflection.md	[`code_typed`]	(@ref)
./devdocs/reflection.md	[`@code_warntype`]	(@ref)
./devdocs/reflection.md	[`code_llvm(f::Function, (Argtypes...))`]	(@ref)
./devdocs/reflection.md	[`code_native(f::Function, (Argtypes...))`]	(@ref)
./devdocs/require.md	[`Base.require`]	(@ref)
./devdocs/stdio.md	[`write(2)`]	(@ref)
./devdocs/stdio.md	[`Base.STDIN`]	(@ref)
./devdocs/stdio.md	[`Base.STDOUT`]	(@ref)
./devdocs/stdio.md	[`Base.STDERR`]	(@ref)
./devdocs/stdio.md	[`Base.STDIN`]	(@ref)
./devdocs/stdio.md	[`Base.STDOUT`]	(@ref)
./devdocs/stdio.md	[`Base.STDERR`]	(@ref)
./devdocs/stdio.md	[`ccall`]	(@ref)
./devdocs/stdio.md	[`Base.read`]	(@ref)
./devdocs/stdio.md	[`Base.write`]	(@ref)
./devdocs/stdio.md	[`ccall`]	(@ref)
./devdocs/subarrays.md	[`AbstractArray`]	(@ref)
./devdocs/subarrays.md	[`SparseMatrixCSC`]	(@ref)
./devdocs/types.md	[Parametric Types]	(@ref)
./devdocs/types.md	[`Integer`]	(@ref)
./devdocs/types.md	[`Int8`]	(@ref)
./devdocs/types.md	[`Array`]	(@ref)
./devdocs/types.md	[`Array`]	(@ref)
./devdocs/types.md	[`Real`]	(@ref)
./devdocs/types.md	[`AbstractArray`]	(@ref)
./devdocs/types.md	[gdb debugging tips]	(@ref)
./index.md	[Introduction]	(@ref man-introduction)
./index.md	[Getting Started]	(@ref)
./index.md	[Variables]	(@ref)
./index.md	[Integers and Floating-Point Numbers]	(@ref)
./index.md	[Mathematical Operations and Elementary Functions]	(@ref)
./index.md	[Complex and Rational Numbers]	(@ref)
./index.md	[Strings]	(@ref man-strings)
./index.md	[Functions]	(@ref man-functions)
./index.md	[Control Flow]	(@ref)
./index.md	[Scope of Variables]	(@ref scope-of-variables)
./index.md	[Types]	(@ref man-types)
./index.md	[Methods]	(@ref)
./index.md	[Constructors]	(@ref man-constructors)
./index.md	[Conversion and Promotion]	(@ref conversion-and-promotion)
./index.md	[Interfaces]	(@ref)
./index.md	[Modules]	(@ref modules)
./index.md	[Documentation]	(@ref)
./index.md	[Metaprogramming]	(@ref)
./index.md	[Multi-dimensional Arrays]	(@ref man-multi-dim-arrays)
./index.md	[Linear Algebra]	(@ref)
./index.md	[Networking and Streams]	(@ref)
./index.md	[Parallel Computing]	(@ref)
./index.md	[Date and DateTime]	(@ref)
./index.md	[Running External Programs]	(@ref)
./index.md	[Calling C and Fortran Code]	(@ref)
./index.md	[Handling Operating System Variation]	(@ref)
./index.md	[Environment Variables]	(@ref)
./index.md	[Interacting With Julia]	(@ref)
./index.md	[Embedding Julia]	(@ref)
./index.md	[Packages]	(@ref)
./index.md	[Profiling]	(@ref)
./index.md	[Stack Traces]	(@ref)
./index.md	[Performance Tips]	(@ref man-performance-tips)
./index.md	[Workflow Tips]	(@ref man-workflow-tips)
./index.md	[Style Guide]	(@ref)
./index.md	[Frequently Asked Questions]	(@ref)
./index.md	[Noteworthy Differences from other Languages]	(@ref)
./index.md	[Unicode Input]	(@ref)
./index.md	[Essentials]	(@ref)
./index.md	[Collections and Data Structures]	(@ref)
./index.md	[Mathematics]	(@ref)
./index.md	[Numbers]	(@ref lib-numbers)
./index.md	[Strings]	(@ref lib-strings)
./index.md	[Arrays]	(@ref lib-arrays)
./index.md	[Tasks and Parallel Computing]	(@ref)
./index.md	[Linear Algebra]	(@ref)
./index.md	[Constants]	(@ref lib-constants)
./index.md	[Filesystem]	(@ref)
./index.md	[Delimited Files]	(@ref)
./index.md	[I/O and Network]	(@ref)
./index.md	[Punctuation]	(@ref)
./index.md	[Sorting and Related Functions]	(@ref)
./index.md	[Package Manager Functions]	(@ref)
./index.md	[Dates and Time]	(@ref stdlib-dates)
./index.md	[Iteration utilities]	(@ref)
./index.md	[Unit Testing]	(@ref)
./index.md	[C Interface]	(@ref)
./index.md	[C Standard Library]	(@ref)
./index.md	[Dynamic Linker]	(@ref)
./index.md	[StackTraces]	(@ref)
./index.md	[SIMD Support]	(@ref)
./index.md	[Profiling]	(@ref lib-profiling)
./index.md	[Memory-mapped I/O]	(@ref)
./index.md	[Shared Arrays]	(@ref)
./index.md	[Base64]	(@ref)
./index.md	[File Events]	(@ref lib-filewatching)
./index.md	[Iterative Eigensolvers]	(@ref lib-itereigen)
./index.md	[Reflection and introspection]	(@ref)
./index.md	[Initialization of the Julia runtime]	(@ref)
./index.md	[Julia ASTs]	(@ref)
./index.md	[More about types]	(@ref)
./index.md	[Memory layout of Julia Objects]	(@ref)
./index.md	[Eval of Julia code]	(@ref)
./index.md	[Calling Conventions]	(@ref)
./index.md	[High-level Overview of the Native-Code Generation Process]	(@ref)
./index.md	[Julia Functions]	(@ref)
./index.md	[Base.Cartesian]	(@ref)
./index.md	[Talking to the compiler (the `:meta` mechanism)]	(@ref)
./index.md	[SubArrays]	(@ref)
./index.md	[System Image Building]	(@ref)
./index.md	[Working with LLVM]	(@ref)
./index.md	[printf() and stdio in the Julia runtime]	(@ref)
./index.md	[Bounds checking]	(@ref)
./index.md	[Proper maintenance and care of multi-threading locks]	(@ref)
./index.md	[Arrays with custom indices]	(@ref)
./index.md	[Base.LibGit2]	(@ref)
./index.md	[Module loading]	(@ref)
./index.md	[Inference]	(@ref)
./index.md	[Reporting and analyzing crashes (segfaults)]	(@ref)
./index.md	[gdb debugging tips]	(@ref)
./index.md	[Using Valgrind with Julia]	(@ref)
./index.md	[Sanitizer support]	(@ref)
./manual/arrays.md	[Multi-dimensional Arrays]	(@id man-multi-dim-arrays)
./manual/arrays.md	[manual section on the AbstractArray interface]	(@ref man-interface-array)
./manual/arrays.md	[`Float64`]	(@ref)
./manual/arrays.md	[`Int32`]	(@ref)
./manual/arrays.md	[`eltype(A)`]	(@ref)
./manual/arrays.md	[`length(A)`]	(@ref)
./manual/arrays.md	[`ndims(A)`]	(@ref)
./manual/arrays.md	[`size(A)`]	(@ref)
./manual/arrays.md	[`size(A,n)`]	(@ref)
./manual/arrays.md	[`indices(A)`]	(@ref)
./manual/arrays.md	[`indices(A,n)`]	(@ref)
./manual/arrays.md	[`eachindex(A)`]	(@ref)
./manual/arrays.md	[`stride(A,k)`]	(@ref)
./manual/arrays.md	[`strides(A)`]	(@ref)
./manual/arrays.md	[`Float64`]	(@ref)
./manual/arrays.md	[`Array{T}(uninitialized, dims...)`]	(@ref)
./manual/arrays.md	[`Array`]	(@ref)
./manual/arrays.md	[`zeros(T, dims...)`]	(@ref)
./manual/arrays.md	[`ones(T, dims...)`]	(@ref)
./manual/arrays.md	[`trues(dims...)`]	(@ref)
./manual/arrays.md	[`BitArray`]	(@ref)
./manual/arrays.md	[`falses(dims...)`]	(@ref)
./manual/arrays.md	[`reshape(A, dims...)`]	(@ref)
./manual/arrays.md	[`copy(A)`]	(@ref)
./manual/arrays.md	[`deepcopy(A)`]	(@ref)
./manual/arrays.md	[`similar(A, T, dims...)`]	(@ref)
./manual/arrays.md	[`reinterpret(T, A)`]	(@ref)
./manual/arrays.md	[`rand(T, dims...)`]	(@ref)
./manual/arrays.md	[`randn(T, dims...)`]	(@ref)
./manual/arrays.md	[`Matrix{T}(I, m, n)`]	(@ref)
./manual/arrays.md	[`linspace(start, stop, n)`]	(@ref)
./manual/arrays.md	[`fill!(A, x)`]	(@ref)
./manual/arrays.md	[`fill(x, dims...)`]	(@ref)
./manual/arrays.md	[promotion type]	(@ref conversion-and-promotion)
./manual/arrays.md	[`cat(k, A...)`]	(@ref)
./manual/arrays.md	[`vcat(A...)`]	(@ref)
./manual/arrays.md	[`hcat(A...)`]	(@ref)
./manual/arrays.md	[`vcat`]	(@ref)
./manual/arrays.md	[`hcat`]	(@ref)
./manual/arrays.md	[`hvcat`]	(@ref)
./manual/arrays.md	[`hvcat`]	(@ref)
./manual/arrays.md	[Iteration]	(@ref)
./manual/arrays.md	[Indexing]	(@id man-array-indexing)
./manual/arrays.md	[supported index]	(@ref man-supported-index-types)
./manual/arrays.md	[`Colon`]	(@ref)
./manual/arrays.md	[`searchsorted`]	(@ref)
./manual/arrays.md	[supported index]	(@ref man-supported-index-types)
./manual/arrays.md	[`Colon`]	(@ref)
./manual/arrays.md	[Indexing]	(@ref man-array-indexing)
./manual/arrays.md	[`setindex!`]	(@ref)
./manual/arrays.md	[Supported index types]	(@id man-supported-index-types)
./manual/arrays.md	[`to_indices`]	(@ref)
./manual/arrays.md	[`to_indices`]	(@ref)
./manual/arrays.md	[`Colon()`]	(@ref)
./manual/arrays.md	[Iteration]	(@ref)
./manual/arrays.md	[dot broadcasting]	(@ref man-vectorized)
./manual/arrays.md	[`find(B)`]	(@ref)
./manual/arrays.md	[`find`]	(@ref)
./manual/arrays.md	[`AbstractArray`]	(@ref)
./manual/arrays.md	[`isapprox`]	(@ref)
./manual/arrays.md	[provides the dot syntax]	(@ref man-vectorized)
./manual/arrays.md	[Broadcasting]	(@ref)
./manual/arrays.md	[dot version]	(@ref man-dot-operators)
./manual/arrays.md	[fused broadcasting operations]	(@ref man-vectorized)
./manual/arrays.md	[`max`]	(@ref)
./manual/arrays.md	[`broadcast`]	(@ref)
./manual/arrays.md	[Dotted operators]	(@ref man-dot-operators)
./manual/arrays.md	[`broadcast!`]	(@ref)
./manual/arrays.md	[`broadcast_getindex`]	(@ref)
./manual/arrays.md	[`broadcast_setindex!`]	(@ref)
./manual/arrays.md	[dot syntax]	(@ref man-vectorized)
./manual/arrays.md	[automatically fuse]	(@ref man-dot-operators)
./manual/arrays.md	[`broadcast`]	(@ref)
./manual/arrays.md	[`AbstractArray{T,N}`]	(@ref)
./manual/arrays.md	[`AbstractVector`]	(@ref)
./manual/arrays.md	[`AbstractMatrix`]	(@ref)
./manual/arrays.md	[`size(A)`]	(@ref)
./manual/arrays.md	[`getindex(A,i)`]	(@ref)
./manual/arrays.md	[`getindex(A,i1,...,iN)`]	(@ref getindex)
./manual/arrays.md	[`setindex!`]	(@ref)
./manual/arrays.md	[`similar(A,T=eltype(A),dims=size(A))`]	(@ref)
./manual/arrays.md	[`copy`]	(@ref)
./manual/arrays.md	[`size`]	(@ref)
./manual/arrays.md	[`stride(A,k)`]	(@ref)
./manual/arrays.md	[`getindex(A,i)`]	(@ref)
./manual/arrays.md	[`stride(A,k)`]	(@ref)
./manual/arrays.md	[`Base.unsafe_convert(Ptr{T}, A)`]	(@ref)
./manual/arrays.md	[`Array`]	(@ref)
./manual/arrays.md	[Performance Tips]	(@ref man-performance-tips)
./manual/arrays.md	[`Vector`]	(@ref)
./manual/arrays.md	[`Matrix`]	(@ref)
./manual/arrays.md	[`Array`]	(@ref)
./manual/arrays.md	[`view`]	(@ref)
./manual/arrays.md	[`getindex`]	(@ref)
./manual/arrays.md	[`view`]	(@ref)
./manual/arrays.md	[`getindex`]	(@ref)
./manual/arrays.md	[`view`]	(@ref)
./manual/arrays.md	[`@views`]	(@ref)
./manual/arrays.md	[`Array`]	(@ref)
./manual/arrays.md	[Compressed Sparse Column (CSC) Sparse Matrix Storage]	(@id man-csc)
./manual/arrays.md	[`SparseMatrixCSC{Tv,Ti}`]	(@ref)
./manual/arrays.md	[`nnz`]	(@ref)
./manual/arrays.md	[`count(!iszero, x)`]	(@ref)
./manual/arrays.md	[`dropzeros`]	(@ref)
./manual/arrays.md	[`dropzeros!`]	(@ref)
./manual/arrays.md	[`SparseVector{Tv,Ti}`]	(@ref)
./manual/arrays.md	[`SparseMatrixCSC`]	(@ref)
./manual/arrays.md	[Sparse Matrix Storage]	(@ref man-csc)
./manual/arrays.md	[`zeros`]	(@ref)
./manual/arrays.md	[`sparse`]	(@ref)
./manual/arrays.md	[`sparsevec`]	(@ref)
./manual/arrays.md	[`sparse`]	(@ref)
./manual/arrays.md	[`sparsevec`]	(@ref)
./manual/arrays.md	[`findnz`]	(@ref)
./manual/arrays.md	[`findn`]	(@ref)
./manual/arrays.md	[`sparse`]	(@ref)
./manual/arrays.md	[`Array`]	(@ref)
./manual/arrays.md	[`issparse`]	(@ref)
./manual/arrays.md	[`findnz`]	(@ref)
./manual/arrays.md	[Sparse Vectors and Matrices]	(@ref stdlib-sparse-arrays)
./manual/arrays.md	[`spzeros(m,n)`]	(@ref)
./manual/arrays.md	[`zeros(m,n)`]	(@ref)
./manual/arrays.md	[`spzeros(m,n)`]	(@ref)
./manual/arrays.md	[`spones(S)`]	(@ref)
./manual/arrays.md	[`ones(m,n)`]	(@ref)
./manual/arrays.md	[`spones`]	(@ref)
./manual/arrays.md	[`sparse(I, n, n)`]	(@ref)
./manual/arrays.md	[`Matrix(I,n,n)`]	(@ref)
./manual/arrays.md	[`Array(S)`]	(@ref)
./manual/arrays.md	[`sparse(A)`]	(@ref)
./manual/arrays.md	[`sprand(m,n,d)`]	(@ref)
./manual/arrays.md	[`rand(m,n)`]	(@ref)
./manual/arrays.md	[`sprandn(m,n,d)`]	(@ref)
./manual/arrays.md	[`randn(m,n)`]	(@ref)
./manual/arrays.md	[`sprandn(m,n,d,X)`]	(@ref)
./manual/arrays.md	[`randn(m,n,X)`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Int32`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`cfunction`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`cfunction`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`cfunction`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Float64`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Base.cconvert`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Base.cconvert`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`convert`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Base.unsafe_convert`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Signed`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Base.cconvert`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Base.cconvert`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Base.cconvert`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`cfunction`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`cfunction`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`cfunction`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`cfunction`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Base.cconvert(Csize_t, n)`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Base.cconvert`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`Base.cconvert(Ref{Cdouble}, result_array)`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`pointer`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`unsafe_load`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`String`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`unsafe_wrap`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`cglobal`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`cglobal`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`unsafe_load`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`unsafe_store!`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`getindex`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`setindex!`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`unsafe_pointer_to_objref(ptr)`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`pointer_from_objref(v)`]	(@ref)
./manual/calling-c-and-fortran-code.md	[`ccall`]	(@ref)
./manual/complex-and-rational-numbers.md	[Mathematical Operations and Elementary Functions]	(@ref)
./manual/complex-and-rational-numbers.md	[Conversion and Promotion]	(@ref conversion-and-promotion)
./manual/complex-and-rational-numbers.md	[`im`]	(@ref)
./manual/complex-and-rational-numbers.md	[juxtaposed with identifiers as coefficients]	(@ref man-numeric-literal-coefficients)
./manual/complex-and-rational-numbers.md	[`abs`]	(@ref)
./manual/complex-and-rational-numbers.md	[`abs2`]	(@ref)
./manual/complex-and-rational-numbers.md	[`angle`]	(@ref)
./manual/complex-and-rational-numbers.md	[Elementary Functions]	(@ref)
./manual/complex-and-rational-numbers.md	[`sqrt`]	(@ref)
./manual/complex-and-rational-numbers.md	[literal numeric coefficient notation]	(@ref man-numeric-literal-coefficients)
./manual/complex-and-rational-numbers.md	[`complex`]	(@ref)
./manual/complex-and-rational-numbers.md	[`Inf`]	(@ref)
./manual/complex-and-rational-numbers.md	[`NaN`]	(@ref)
./manual/complex-and-rational-numbers.md	[Special floating-point values]	(@ref)
./manual/complex-and-rational-numbers.md	[`//`]	(@ref)
./manual/complex-and-rational-numbers.md	[`numerator`]	(@ref)
./manual/complex-and-rational-numbers.md	[`denominator`]	(@ref)
./manual/complex-and-rational-numbers.md	[`NaN`]	(@ref)
./manual/constructors.md	[Constructors]	(@id man-constructors)
./manual/constructors.md	[Composite Types]	(@ref)
./manual/constructors.md	[`new`]	(@ref)
./manual/constructors.md	[`new`]	(@ref)
./manual/constructors.md	[Parametric Types]	(@ref)
./manual/constructors.md	[`InexactError`]	(@ref)
./manual/constructors.md	[`Int64`]	(@ref)
./manual/constructors.md	[`convert`]	(@ref)
./manual/constructors.md	[`Float64`]	(@ref)
./manual/constructors.md	[`Float64`]	(@ref)
./manual/constructors.md	[`MethodError`]	(@ref)
./manual/constructors.md	[Conversion and Promotion]	(@ref conversion-and-promotion)
./manual/constructors.md	[`Float64`]	(@ref)
./manual/constructors.md	[`+`]	(@ref)
./manual/constructors.md	[Rational Numbers]	(@ref)
./manual/constructors.md	[`//`]	(@ref)
./manual/constructors.md	[`//`]	(@ref)
./manual/constructors.md	[Rational Numbers]	(@ref)
./manual/constructors.md	[`//`]	(@ref)
./manual/constructors.md	[`//`]	(@ref)
./manual/constructors.md	[`//`]	(@ref)
./manual/constructors.md	[Constructors and Conversion]	(@id constructors-and-conversion)
./manual/constructors.md	[`convert`]	(@ref)
./manual/constructors.md	[`ccall`]	(@ref)
./manual/constructors.md	[`Int32`]	(@ref)
./manual/constructors.md	[`Int64`]	(@ref)
./manual/control-flow.md	[Compound Expressions]	(@ref man-compound-expressions)
./manual/control-flow.md	[Conditional Evaluation]	(@ref man-conditional-evaluation)
./manual/control-flow.md	[Short-Circuit Evaluation]	(@ref)
./manual/control-flow.md	[Repeated Evaluation: Loops]	(@ref man-loops)
./manual/control-flow.md	[Exception Handling]	(@ref)
./manual/control-flow.md	[`error`]	(@ref)
./manual/control-flow.md	[`throw`]	(@ref)
./manual/control-flow.md	[Tasks (aka Coroutines)]	(@ref man-tasks)
./manual/control-flow.md	[`yieldto`]	(@ref)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/control-flow.md	[Compound Expressions]	(@id man-compound-expressions)
./manual/control-flow.md	[Functions]	(@ref)
./manual/control-flow.md	[Conditional Evaluation]	(@id man-conditional-evaluation)
./manual/control-flow.md	[`Int64`]	(@ref)
./manual/control-flow.md	[`Bool`]	(@ref)
./manual/control-flow.md	[Mathematical Operations and Elementary Functions]	(@ref)
./manual/control-flow.md	[Repeated Evaluation: Loops]	(@id man-loops)
./manual/control-flow.md	[Scope of Variables]	(@ref scope-of-variables)
./manual/control-flow.md	[Multi-dimensional Arrays]	(@ref man-multi-dim-arrays)
./manual/control-flow.md	[`ArgumentError`]	(@ref)
./manual/control-flow.md	[`BoundsError`]	(@ref)
./manual/control-flow.md	[`DivideError`]	(@ref)
./manual/control-flow.md	[`DomainError`]	(@ref)
./manual/control-flow.md	[`EOFError`]	(@ref)
./manual/control-flow.md	[`ErrorException`]	(@ref)
./manual/control-flow.md	[`InexactError`]	(@ref)
./manual/control-flow.md	[`InitError`]	(@ref)
./manual/control-flow.md	[`InterruptException`]	(@ref)
./manual/control-flow.md	[`KeyError`]	(@ref)
./manual/control-flow.md	[`LoadError`]	(@ref)
./manual/control-flow.md	[`OutOfMemoryError`]	(@ref)
./manual/control-flow.md	[`ReadOnlyMemoryError`]	(@ref)
./manual/control-flow.md	[`RemoteException`]	(@ref)
./manual/control-flow.md	[`MethodError`]	(@ref)
./manual/control-flow.md	[`OverflowError`]	(@ref)
./manual/control-flow.md	[`ParseError`]	(@ref)
./manual/control-flow.md	[`SystemError`]	(@ref)
./manual/control-flow.md	[`TypeError`]	(@ref)
./manual/control-flow.md	[`UndefRefError`]	(@ref)
./manual/control-flow.md	[`UndefVarError`]	(@ref)
./manual/control-flow.md	[`sqrt`]	(@ref)
./manual/control-flow.md	[`DomainError`]	(@ref)
./manual/control-flow.md	[`throw`]	(@ref)
./manual/control-flow.md	[`throw`]	(@ref)
./manual/control-flow.md	[`throw`]	(@ref)
./manual/control-flow.md	[`DomainError`]	(@ref)
./manual/control-flow.md	[`DomainError`]	(@ref)
./manual/control-flow.md	[`UndefVarError`]	(@ref)
./manual/control-flow.md	[`error`]	(@ref)
./manual/control-flow.md	[`ErrorException`]	(@ref)
./manual/control-flow.md	[`sqrt`]	(@ref)
./manual/control-flow.md	[`rethrow`]	(@ref)
./manual/control-flow.md	[`backtrace`]	(@ref)
./manual/control-flow.md	[`catch_backtrace`]	(@ref)
./manual/control-flow.md	[Tasks (aka Coroutines)]	(@id man-tasks)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/control-flow.md	[`Channel`]	(@ref)
./manual/control-flow.md	[`Channel`]	(@ref)
./manual/control-flow.md	[`put!`]	(@ref)
./manual/control-flow.md	[`Channel`]	(@ref)
./manual/control-flow.md	[`take!`]	(@ref)
./manual/control-flow.md	[`put!`]	(@ref)
./manual/control-flow.md	[`Channel`]	(@ref)
./manual/control-flow.md	[`Channel`]	(@ref)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/control-flow.md	[`Channel`]	(@ref)
./manual/control-flow.md	[`Channel`]	(@ref)
./manual/control-flow.md	[anonymous function]	(@ref man-anonymous-functions)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/control-flow.md	[`bind`]	(@ref)
./manual/control-flow.md	[`schedule`]	(@ref)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/control-flow.md	[`Channel`]	(@ref)
./manual/control-flow.md	[Parallel Computing]	(@ref)
./manual/control-flow.md	[`yieldto`]	(@ref)
./manual/control-flow.md	[`yieldto`]	(@ref)
./manual/control-flow.md	[`yieldto`]	(@ref)
./manual/control-flow.md	[`yieldto`]	(@ref)
./manual/control-flow.md	[`put!`]	(@ref)
./manual/control-flow.md	[`take!`]	(@ref)
./manual/control-flow.md	[`put!`]	(@ref)
./manual/control-flow.md	[`yieldto`]	(@ref)
./manual/control-flow.md	[`yieldto`]	(@ref)
./manual/control-flow.md	[`current_task`]	(@ref)
./manual/control-flow.md	[`istaskdone`]	(@ref)
./manual/control-flow.md	[`istaskstarted`]	(@ref)
./manual/control-flow.md	[`task_local_storage`]	(@ref)
./manual/control-flow.md	[`wait`]	(@ref)
./manual/control-flow.md	[`wait`]	(@ref)
./manual/control-flow.md	[`wait`]	(@ref)
./manual/control-flow.md	[`wait`]	(@ref)
./manual/control-flow.md	[`wait`]	(@ref)
./manual/control-flow.md	[`read`]	(@ref)
./manual/control-flow.md	[`wait`]	(@ref)
./manual/control-flow.md	[`Condition`]	(@ref)
./manual/control-flow.md	[`wait`]	(@ref)
./manual/control-flow.md	[`Condition`]	(@ref)
./manual/control-flow.md	[`notify`]	(@ref)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/control-flow.md	[`yieldto`]	(@ref)
./manual/control-flow.md	[`schedule`]	(@ref)
./manual/control-flow.md	[`@schedule`]	(@ref)
./manual/control-flow.md	[`@async`]	(@ref)
./manual/control-flow.md	[Parallel Computing]	(@ref)
./manual/control-flow.md	[`Task`]	(@ref)
./manual/conversion-and-promotion.md	[Conversion and Promotion]	(@id conversion-and-promotion)
./manual/conversion-and-promotion.md	[Integers and Floating-Point Numbers]	(@ref)
./manual/conversion-and-promotion.md	[Mathematical Operations and Elementary Functions]	(@ref)
./manual/conversion-and-promotion.md	[Types]	(@ref man-types)
./manual/conversion-and-promotion.md	[Methods]	(@ref)
./manual/conversion-and-promotion.md	[singleton type]	(@ref man-singleton-types)
./manual/conversion-and-promotion.md	[`Bool`]	(@ref)
./manual/conversion-and-promotion.md	[Case Study: Rational Conversions]	(@id man-rational-conversion)
./manual/conversion-and-promotion.md	[`Rational`]	(@ref)
./manual/conversion-and-promotion.md	[`Int32`]	(@ref)
./manual/conversion-and-promotion.md	[`Float64`]	(@ref)
./manual/conversion-and-promotion.md	[`BigInt`]	(@ref)
./manual/conversion-and-promotion.md	[conversion methods discussed above]	(@ref man-rational-conversion)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`TimeType`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Int64`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Period`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`dayname`]	(@ref)
./manual/dates.md	[`monthname`]	(@ref)
./manual/dates.md	[`Dates.DateFormat`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`Day`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Millisecond`]	(@ref)
./manual/dates.md	[`TimeType`]	(@ref)
./manual/dates.md	[`Int64`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Int64`]	(@ref)
./manual/dates.md	[`Period`]	(@ref)
./manual/dates.md	[`TimeType`]	(@ref)
./manual/dates.md	[`TimeType`]	(@ref)
./manual/dates.md	[`dayname`]	(@ref)
./manual/dates.md	[`monthname`]	(@ref)
./manual/dates.md	[`dayabbr`]	(@ref)
./manual/dates.md	[`monthabbr`]	(@ref)
./manual/dates.md	[`Period`]	(@ref)
./manual/dates.md	[`TimeType`]	(@ref)
./manual/dates.md	[`tonext`]	(@ref)
./manual/dates.md	[`toprev`]	(@ref)
./manual/dates.md	[`TimeType`]	(@ref)
./manual/dates.md	[`TimeType`]	(@ref)
./manual/dates.md	[`Bool`]	(@ref)
./manual/dates.md	[`Base.filter`]	(@ref)
./manual/dates.md	[`Period`]	(@ref)
./manual/dates.md	[`Int64`]	(@ref)
./manual/dates.md	[`Period`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`floor`]	(@ref)
./manual/dates.md	[`ceil`]	(@ref)
./manual/dates.md	[`round`]	(@ref)
./manual/dates.md	[`round`]	(@ref)
./manual/dates.md	[`TimeType`]	(@ref)
./manual/dates.md	[`round`]	(@ref)
./manual/dates.md	[`TimeType`]	(@ref)
./manual/dates.md	[API reference]	(@ref stdlib-dates)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`Date`]	(@ref)
./manual/dates.md	[`Period`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[`DateTime`]	(@ref)
./manual/dates.md	[API reference]	(@ref stdlib-dates)
./manual/documentation.md	[`bar!`]	(@ref)
./manual/documentation.md	[`baz`]	(@ref)
./manual/documentation.md	[`baaz`]	(@ref)
./manual/documentation.md	[Code blocks]	(@ref)
./manual/documentation.md	[`MersenneTwister`]	(@ref)
./manual/documentation.md	[`Int32`]	(@ref)
./manual/documentation.md	[`Int64`]	(@ref)
./manual/documentation.md	[`@__doc__`]	(@ref Core.@__doc__)
./manual/documentation.md	[`eigvals`]	(@ref)
./manual/documentation.md	[Footnotes]	(@ref)
./manual/documentation.md	[Inline elements]	(@ref)
./manual/documentation.md	[Footnote references]	(@ref)
./manual/embedding.md	[Calling C and Fortran Code]	(@ref)
./manual/embedding.md	[`Float64`]	(@ref)
./manual/embedding.md	[`Float64`]	(@ref)
./manual/environment-variables.md	[`Base.versioninfo`]	(@ref)
./manual/environment-variables.md	[`Base.JULIA_HOME`]	(@ref)
./manual/environment-variables.md	[`LOAD_PATH`]	(@ref)
./manual/environment-variables.md	[`Base.require`]	(@ref)
./manual/environment-variables.md	[`Pkg.dir`]	(@ref)
./manual/environment-variables.md	[`Base.Pkg.resolve`]	(@ref)
./manual/environment-variables.md	[`Base.edit`]	(@ref)
./manual/environment-variables.md	[`Base.Pkg.edit`]	(@ref)
./manual/environment-variables.md	[`Base.Sys.CPU_CORES`]	(@ref)
./manual/environment-variables.md	[`Float64`]	(@ref)
./manual/environment-variables.md	[Interacting With Julia]	(@ref)
./manual/environment-variables.md	[`Base.require`]	(@ref)
./manual/faq.md	[`gc()`]	(@ref)
./manual/faq.md	[What does "type-stable" mean?]	(@id man-type-stability)
./manual/faq.md	[`Float64`]	(@ref)
./manual/faq.md	[Why does Julia give a `DomainError` for certain seemingly-sensible operations?]	(@id faq-domain-errors)
./manual/faq.md	[`sqrt`]	(@ref)
./manual/faq.md	[`sqrt`]	(@ref)
./manual/faq.md	[`sqrt`]	(@ref)
./manual/faq.md	[type-stable]	(@ref man-type-stability)
./manual/faq.md	[`sqrt`]	(@ref)
./manual/faq.md	[`Int128`]	(@ref)
./manual/faq.md	[`BigInt`]	(@ref)
./manual/faq.md	[type-stability is crucial]	(@ref man-type-stability)
./manual/faq.md	[`BigInt`]	(@ref)
./manual/faq.md	[`typemin(Int)`]	(@ref)
./manual/faq.md	[`typemax(Int)`]	(@ref)
./manual/functions.md	[Functions]	(@id man-functions)
./manual/functions.md	[Compound Expressions]	(@ref man-compound-expressions)
./manual/functions.md	[Short-Circuit Evaluation]	(@ref)
./manual/functions.md	[`+`]	(@ref)
./manual/functions.md	[`*`]	(@ref)
./manual/functions.md	[`hcat`]	(@ref)
./manual/functions.md	[`vcat`]	(@ref)
./manual/functions.md	[`hvcat`]	(@ref)
./manual/functions.md	[`adjoint`]	(@ref)
./manual/functions.md	[`transpose`]	(@ref)
./manual/functions.md	[`colon`]	(@ref)
./manual/functions.md	[`getindex`]	(@ref)
./manual/functions.md	[`setindex!`]	(@ref)
./manual/functions.md	[Anonymous Functions]	(@id man-anonymous-functions)
./manual/functions.md	[`map`]	(@ref)
./manual/functions.md	[`map`]	(@ref)
./manual/functions.md	[Parametrically-constrained Varargs methods]	(@ref)
./manual/functions.md	[`parse(T, num, base)`]	(@ref)
./manual/functions.md	[Note on Optional and keyword Arguments]	(@ref)
./manual/functions.md	[`map`]	(@ref)
./manual/functions.md	[`map`]	(@ref)
./manual/functions.md	[`map`]	(@ref)
./manual/functions.md	[`map`]	(@ref)
./manual/functions.md	[`open`]	(@ref)
./manual/functions.md	[`open`]	(@ref)
./manual/functions.md	[`open`]	(@ref)
./manual/functions.md	[Control Flow]	(@ref)
./manual/functions.md	[Dot Syntax for Vectorizing Functions]	(@id man-vectorized)
./manual/functions.md	[Performance Tips]	(@ref man-performance-tips)
./manual/functions.md	[Broadcasting]	(@ref)
./manual/functions.md	[Pre-allocating outputs]	(@ref)
./manual/functions.md	[`@.`]	(@ref @__dot__)
./manual/functions.md	[dot operators]	(@ref man-dot-operators)
./manual/functions.md	[Types]	(@ref man-types)
./manual/functions.md	[Methods]	(@ref)
./manual/index.md	[Introduction]	(@ref man-introduction)
./manual/index.md	[Getting Started]	(@ref)
./manual/index.md	[Variables]	(@ref)
./manual/index.md	[Integers and Floating-Point Numbers]	(@ref)
./manual/index.md	[Mathematical Operations and Elementary Functions]	(@ref)
./manual/index.md	[Complex and Rational Numbers]	(@ref)
./manual/index.md	[Strings]	(@ref)
./manual/index.md	[Functions]	(@ref)
./manual/index.md	[Control Flow]	(@ref)
./manual/index.md	[Scope of Variables]	(@ref scope-of-variables)
./manual/index.md	[Types]	(@ref man-types)
./manual/index.md	[Methods]	(@ref)
./manual/index.md	[Constructors]	(@ref man-constructors)
./manual/index.md	[Conversion and Promotion]	(@ref conversion-and-promotion)
./manual/index.md	[Interfaces]	(@ref)
./manual/index.md	[Modules]	(@ref)
./manual/index.md	[Documentation]	(@ref)
./manual/index.md	[Metaprogramming]	(@ref)
./manual/index.md	[Multi-dimensional Arrays]	(@ref man-multi-dim-arrays)
./manual/index.md	[Linear algebra]	(@ref)
./manual/index.md	[Networking and Streams]	(@ref)
./manual/index.md	[Parallel Computing]	(@ref)
./manual/index.md	[Date and DateTime]	(@ref)
./manual/index.md	[Running External Programs]	(@ref)
./manual/index.md	[Calling C and Fortran Code]	(@ref)
./manual/index.md	[Handling Operating System Variation]	(@ref)
./manual/index.md	[Environment Variables]	(@ref)
./manual/index.md	[Interacting With Julia]	(@ref)
./manual/index.md	[Embedding Julia]	(@ref)
./manual/index.md	[Packages]	(@ref)
./manual/index.md	[Package Development]	(@ref)
./manual/index.md	[Profiling]	(@ref)
./manual/index.md	[Memory allocation analysis]	(@ref)
./manual/index.md	[Stack Traces]	(@ref)
./manual/index.md	[Performance Tips]	(@ref man-performance-tips)
./manual/index.md	[Workflow Tips]	(@ref man-workflow-tips)
./manual/index.md	[Style Guide]	(@ref)
./manual/index.md	[Frequently Asked Questions]	(@ref)
./manual/index.md	[Noteworthy Differences from other Languages]	(@ref)
./manual/index.md	[Unicode Input]	(@ref)
./manual/integers-and-floating-point-numbers.md	[Arbitrary Precision Arithmetic]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Int8`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`UInt8`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Int16`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`UInt16`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Int32`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`UInt32`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Int64`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`UInt64`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Int128`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`UInt128`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Bool`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float16`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float32`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float64`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[Complex and Rational Numbers]	(@ref)
./manual/integers-and-floating-point-numbers.md	[type promotion system]	(@ref conversion-and-promotion)
./manual/integers-and-floating-point-numbers.md	[`Sys.WORD_SIZE`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`ans`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`typemin`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`typemax`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`typemin`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`typemax`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[for loops]	(@ref man-loops)
./manual/integers-and-floating-point-numbers.md	[Strings]	(@ref man-strings)
./manual/integers-and-floating-point-numbers.md	[Interpolation]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`BigInt`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[Arbitrary Precision Arithmetic]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`typemin`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`DivideError`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`DivideError`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float64`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float32`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float32`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float64`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float16`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float32`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[Numeric Comparisons]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`typemin`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`typemax`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`eps`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float32`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`Float64`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`eps`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`nextfloat`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`prevfloat`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`RoundNearest`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`+`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`-`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`*`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`/`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`sqrt`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`RoundNearest`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`BigInt`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`BigFloat`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`parse`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[type promotion and conversion mechanism]	(@ref conversion-and-promotion)
./manual/integers-and-floating-point-numbers.md	[`BigInt`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`BigFloat`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`BigFloat`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`setprecision`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`setrounding`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[Numeric Literal Coefficients]	(@id man-numeric-literal-coefficients)
./manual/integers-and-floating-point-numbers.md	[Functions]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`zero(x)`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[`one(x)`]	(@ref)
./manual/integers-and-floating-point-numbers.md	[Numeric Comparisons]	(@ref)
./manual/integers-and-floating-point-numbers.md	[type conversion]	(@ref conversion-and-promotion)
./manual/interacting-with-julia.md	[Shell mode]	(@id man-shell-mode)
./manual/interacting-with-julia.md	[Unicode Input]	(@ref)
./manual/interfaces.md	[Iteration]	(@id man-interface-iteration)
./manual/interfaces.md	[`start`]	(@ref)
./manual/interfaces.md	[`done`]	(@ref)
./manual/interfaces.md	[`next`]	(@ref)
./manual/interfaces.md	[many functions that rely upon iteration]	(@ref lib-collections-iteration)
./manual/interfaces.md	[`start`]	(@ref)
./manual/interfaces.md	[`next`]	(@ref)
./manual/interfaces.md	[`done`]	(@ref)
./manual/interfaces.md	[`in`]	(@ref)
./manual/interfaces.md	[`mean`]	(@ref)
./manual/interfaces.md	[`std`]	(@ref)
./manual/interfaces.md	[`eltype`]	(@ref)
./manual/interfaces.md	[`length`]	(@ref)
./manual/interfaces.md	[`collect`]	(@ref)
./manual/interfaces.md	[`push!`]	(@ref)
./manual/interfaces.md	[`Iterators.reverse(iterator)`]	(@ref)
./manual/interfaces.md	[`getindex`]	(@ref)
./manual/interfaces.md	[`endof`]	(@ref)
./manual/interfaces.md	[`getindex`]	(@ref)
./manual/interfaces.md	[`MethodError`]	(@ref)
./manual/interfaces.md	[indexing operations supported by some of the builtin types]	(@ref man-array-indexing)
./manual/interfaces.md	[`AbstractArray`]	(@ref)
./manual/interfaces.md	[Abstract Arrays]	(@id man-interface-array)
./manual/interfaces.md	[Multidimensional and nonscalar indexing]	(@ref man-array-indexing)
./manual/interfaces.md	[Multidimensional and nonscalar indexed assignment]	(@ref man-array-indexing)
./manual/interfaces.md	[arrays manual page]	(@ref man-multi-dim-arrays)
./manual/interfaces.md	[standard library section]	(@ref lib-arrays)
./manual/interfaces.md	[`IndexStyle`]	(@ref)
./manual/interfaces.md	[`SparseMatrixCSC`]	(@ref)
./manual/interfaces.md	[`eltype`]	(@ref)
./manual/interfaces.md	[`ndims`]	(@ref)
./manual/interfaces.md	[`Dict`]	(@ref)
./manual/interfaces.md	[`getindex`]	(@ref)
./manual/interfaces.md	[`setindex!`]	(@ref)
./manual/interfaces.md	[`setindex!`]	(@ref)
./manual/interfaces.md	[`similar`]	(@ref)
./manual/interfaces.md	[`copy`]	(@ref)
./manual/interfaces.md	[`similar`]	(@ref)
./manual/interfaces.md	[Arrays with custom indices]	(@ref)
./manual/interfaces.md	[Broadcasting]	(@id man-interfaces-broadcasting)
./manual/interfaces.md	[Broadcasting]	(@ref)
./manual/interfaces.md	[`Base.BroadcastStyle`]	(@ref)
./manual/interfaces.md	[`Base.broadcast_similar`]	(@ref)
./manual/interfaces.md	[`Broadcast.Scalar`]	(@ref)
./manual/interfaces.md	[`Broadcast.DefaultArrayStyle`]	(@ref)
./manual/interfaces.md	[below]	(@ref writing-binary-broadcasting-rules)
./manual/interfaces.md	[Writing binary broadcasting rules]	(@id writing-binary-broadcasting-rules)
./manual/interfaces.md	[`Broadcast.DefaultArrayStyle`]	(@ref)
./manual/introduction.md	[Introduction]	(@id man-introduction)
./manual/introduction.md	[Performance Tips]	(@ref man-performance-tips)
./manual/linear-algebra.md	[`trace`]	(@ref)
./manual/linear-algebra.md	[`det`]	(@ref)
./manual/linear-algebra.md	[`inv`]	(@ref)
./manual/linear-algebra.md	[factorizations]	(@ref man-linalg-factorizations)
./manual/linear-algebra.md	[`factorize`]	(@ref)
./manual/linear-algebra.md	[`Base.LinAlg.A_ldiv_B!`]	(@ref)
./manual/linear-algebra.md	[`Base.LinAlg.Ac_ldiv_B`]	(@ref)
./manual/linear-algebra.md	[`Base.LinAlg.At_ldiv_Bt`]	(@ref)
./manual/linear-algebra.md	[`Symmetric`]	(@ref)
./manual/linear-algebra.md	[`Hermitian`]	(@ref)
./manual/linear-algebra.md	[`UpperTriangular`]	(@ref)
./manual/linear-algebra.md	[`LowerTriangular`]	(@ref)
./manual/linear-algebra.md	[`Tridiagonal`]	(@ref)
./manual/linear-algebra.md	[`SymTridiagonal`]	(@ref)
./manual/linear-algebra.md	[`Bidiagonal`]	(@ref)
./manual/linear-algebra.md	[`Diagonal`]	(@ref)
./manual/linear-algebra.md	[`UniformScaling`]	(@ref)
./manual/linear-algebra.md	[`Symmetric`]	(@ref)
./manual/linear-algebra.md	[`inv`]	(@ref)
./manual/linear-algebra.md	[`sqrt`]	(@ref)
./manual/linear-algebra.md	[`exp`]	(@ref)
./manual/linear-algebra.md	[`Hermitian`]	(@ref)
./manual/linear-algebra.md	[`inv`]	(@ref)
./manual/linear-algebra.md	[`sqrt`]	(@ref)
./manual/linear-algebra.md	[`exp`]	(@ref)
./manual/linear-algebra.md	[`UpperTriangular`]	(@ref)
./manual/linear-algebra.md	[`inv`]	(@ref)
./manual/linear-algebra.md	[`det`]	(@ref)
./manual/linear-algebra.md	[`LowerTriangular`]	(@ref)
./manual/linear-algebra.md	[`inv`]	(@ref)
./manual/linear-algebra.md	[`det`]	(@ref)
./manual/linear-algebra.md	[`SymTridiagonal`]	(@ref)
./manual/linear-algebra.md	[`eigmax`]	(@ref)
./manual/linear-algebra.md	[`eigmin`]	(@ref)
./manual/linear-algebra.md	[`Tridiagonal`]	(@ref)
./manual/linear-algebra.md	[`Bidiagonal`]	(@ref)
./manual/linear-algebra.md	[`Diagonal`]	(@ref)
./manual/linear-algebra.md	[`inv`]	(@ref)
./manual/linear-algebra.md	[`det`]	(@ref)
./manual/linear-algebra.md	[`logdet`]	(@ref)
./manual/linear-algebra.md	[`/`]	(@ref)
./manual/linear-algebra.md	[`UniformScaling`]	(@ref)
./manual/linear-algebra.md	[`/`]	(@ref)
./manual/linear-algebra.md	[`eig`]	(@ref)
./manual/linear-algebra.md	[`eigvals`]	(@ref)
./manual/linear-algebra.md	[`eigvecs`]	(@ref)
./manual/linear-algebra.md	[`svd`]	(@ref)
./manual/linear-algebra.md	[`svdvals`]	(@ref)
./manual/linear-algebra.md	[`Symmetric`]	(@ref)
./manual/linear-algebra.md	[`Hermitian`]	(@ref)
./manual/linear-algebra.md	[`UpperTriangular`]	(@ref)
./manual/linear-algebra.md	[`LowerTriangular`]	(@ref)
./manual/linear-algebra.md	[`SymTridiagonal`]	(@ref)
./manual/linear-algebra.md	[`Tridiagonal`]	(@ref)
./manual/linear-algebra.md	[`Bidiagonal`]	(@ref)
./manual/linear-algebra.md	[`Diagonal`]	(@ref)
./manual/linear-algebra.md	[`UniformScaling`]	(@ref)
./manual/linear-algebra.md	[`+`]	(@ref)
./manual/linear-algebra.md	[`-`]	(@ref)
./manual/linear-algebra.md	[`*`]	(@ref)
./manual/linear-algebra.md	[`\`]	(@ref)
./manual/linear-algebra.md	[Matrix factorizations]	(@id man-linalg-factorizations)
./manual/linear-algebra.md	[Linear Algebra]	(@ref)
./manual/linear-algebra.md	[`Tridiagonal`]	(@ref)
./manual/mathematical-operations.md	[`Bool`]	(@ref)
./manual/mathematical-operations.md	[Conversion and Promotion]	(@ref conversion-and-promotion)
./manual/mathematical-operations.md	[Vectorized "dot" operators]	(@id man-dot-operators)
./manual/mathematical-operations.md	["dot" call]	(@ref man-vectorized)
./manual/mathematical-operations.md	[broadcast]	(@ref Broadcasting)
./manual/mathematical-operations.md	[`@.`]	(@ref @__dot__)
./manual/mathematical-operations.md	[dot syntax documentation]	(@ref man-vectorized)
./manual/mathematical-operations.md	[`kron`]	(@ref)
./manual/mathematical-operations.md	[`==`]	(@ref)
./manual/mathematical-operations.md	[`!=`]	(@ref)
./manual/mathematical-operations.md	[`≠`]	(@ref !=)
./manual/mathematical-operations.md	[`<`]	(@ref)
./manual/mathematical-operations.md	[`<=`]	(@ref)
./manual/mathematical-operations.md	[`≤`]	(@ref <=)
./manual/mathematical-operations.md	[`>`]	(@ref)
./manual/mathematical-operations.md	[`>=`]	(@ref)
./manual/mathematical-operations.md	[`≥`]	(@ref >=)
./manual/mathematical-operations.md	[Arrays]	(@ref)
./manual/mathematical-operations.md	[`isequal(x, y)`]	(@ref)
./manual/mathematical-operations.md	[`isfinite(x)`]	(@ref)
./manual/mathematical-operations.md	[`isinf(x)`]	(@ref)
./manual/mathematical-operations.md	[`isnan(x)`]	(@ref)
./manual/mathematical-operations.md	[`isequal`]	(@ref)
./manual/mathematical-operations.md	[`==`]	(@ref)
./manual/mathematical-operations.md	[`==`]	(@ref)
./manual/mathematical-operations.md	[`hash`]	(@ref)
./manual/mathematical-operations.md	[`&`]	(@ref)
./manual/mathematical-operations.md	[Short-Circuit Evaluation]	(@ref)
./manual/mathematical-operations.md	[dot syntax]	(@ref man-vectorized)
./manual/mathematical-operations.md	[Rounding functions]	(@ref)
./manual/mathematical-operations.md	[Conversion and Promotion]	(@ref conversion-and-promotion)
./manual/mathematical-operations.md	[`round(x)`]	(@ref)
./manual/mathematical-operations.md	[`round(T, x)`]	(@ref)
./manual/mathematical-operations.md	[`floor(x)`]	(@ref)
./manual/mathematical-operations.md	[`floor(T, x)`]	(@ref)
./manual/mathematical-operations.md	[`ceil(x)`]	(@ref)
./manual/mathematical-operations.md	[`ceil(T, x)`]	(@ref)
./manual/mathematical-operations.md	[`trunc(x)`]	(@ref)
./manual/mathematical-operations.md	[`trunc(T, x)`]	(@ref)
./manual/mathematical-operations.md	[`div(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`fld(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`cld(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`rem(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`mod(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`mod1(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`mod2pi(x)`]	(@ref)
./manual/mathematical-operations.md	[`divrem(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`fldmod(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`gcd(x,y...)`]	(@ref)
./manual/mathematical-operations.md	[`lcm(x,y...)`]	(@ref)
./manual/mathematical-operations.md	[`abs(x)`]	(@ref)
./manual/mathematical-operations.md	[`abs2(x)`]	(@ref)
./manual/mathematical-operations.md	[`sign(x)`]	(@ref)
./manual/mathematical-operations.md	[`signbit(x)`]	(@ref)
./manual/mathematical-operations.md	[`copysign(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`flipsign(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`sqrt(x)`]	(@ref)
./manual/mathematical-operations.md	[`cbrt(x)`]	(@ref)
./manual/mathematical-operations.md	[`hypot(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`exp(x)`]	(@ref)
./manual/mathematical-operations.md	[`expm1(x)`]	(@ref)
./manual/mathematical-operations.md	[`ldexp(x,n)`]	(@ref)
./manual/mathematical-operations.md	[`log(x)`]	(@ref)
./manual/mathematical-operations.md	[`log(b,x)`]	(@ref)
./manual/mathematical-operations.md	[`log2(x)`]	(@ref)
./manual/mathematical-operations.md	[`log10(x)`]	(@ref)
./manual/mathematical-operations.md	[`log1p(x)`]	(@ref)
./manual/mathematical-operations.md	[`exponent(x)`]	(@ref)
./manual/mathematical-operations.md	[`significand(x)`]	(@ref)
./manual/mathematical-operations.md	[`hypot`]	(@ref)
./manual/mathematical-operations.md	[`expm1`]	(@ref)
./manual/mathematical-operations.md	[`log1p`]	(@ref)
./manual/mathematical-operations.md	[`sinpi(x)`]	(@ref)
./manual/mathematical-operations.md	[`cospi(x)`]	(@ref)
./manual/mathematical-operations.md	[`sin(pi*x)`]	(@ref)
./manual/mathematical-operations.md	[`cos(pi*x)`]	(@ref)
./manual/mathematical-operations.md	[`sind(x)`]	(@ref)
./manual/mathematical-operations.md	[`gamma(x)`]	(@ref)
./manual/mathematical-operations.md	[`lgamma(x)`]	(@ref)
./manual/mathematical-operations.md	[`lfact(x)`]	(@ref)
./manual/mathematical-operations.md	[`beta(x,y)`]	(@ref)
./manual/mathematical-operations.md	[`lbeta(x,y)`]	(@ref)
./manual/metaprogramming.md	[`dump`]	(@ref)
./manual/metaprogramming.md	[`Symbol`]	(@ref)
./manual/metaprogramming.md	[`Symbol`]	(@ref)
./manual/metaprogramming.md	[scope]	(@ref scope-of-variables)
./manual/metaprogramming.md	[`dump`]	(@ref)
./manual/metaprogramming.md	[`Meta.@dump`]	(@ref)
./manual/metaprogramming.md	[`Meta.parse`]	(@ref)
./manual/metaprogramming.md	[string interpolation]	(@ref string-interpolation)
./manual/metaprogramming.md	[command interpolation]	(@ref command-interpolation)
./manual/metaprogramming.md	[`eval`]	(@ref)
./manual/metaprogramming.md	[`eval`]	(@ref)
./manual/metaprogramming.md	[module]	(@ref modules)
./manual/metaprogramming.md	[`eval`]	(@ref)
./manual/metaprogramming.md	[`eval`]	(@ref)
./manual/metaprogramming.md	[`eval`]	(@ref)
./manual/metaprogramming.md	[`parse`]	(@ref)
./manual/metaprogramming.md	[Macros]	(@id man-macros)
./manual/metaprogramming.md	[`eval`]	(@ref)
./manual/metaprogramming.md	[`macroexpand`]	(@ref)
./manual/metaprogramming.md	[`@macroexpand`]	(@ref)
./manual/metaprogramming.md	[`macroexpand`]	(@ref)
./manual/metaprogramming.md	[`println`]	(@ref)
./manual/metaprogramming.md	[`macroexpand`]	(@ref)
./manual/metaprogramming.md	[`show`]	(@ref)
./manual/metaprogramming.md	[`@macroexpand`]	(@ref)
./manual/metaprogramming.md	[string interpolation]	(@ref string-interpolation)
./manual/metaprogramming.md	[`string`]	(@ref)
./manual/metaprogramming.md	[`string`]	(@ref)
./manual/metaprogramming.md	[normal scoping block behavior]	(@ref scope-of-variables)
./manual/metaprogramming.md	[`time`]	(@ref)
./manual/metaprogramming.md	[`gensym`]	(@ref)
./manual/metaprogramming.md	[`esc`]	(@ref)
./manual/metaprogramming.md	[`eval`]	(@ref)
./manual/metaprogramming.md	[`@eval`]	(@ref)
./manual/metaprogramming.md	[`@eval`]	(@ref)
./manual/metaprogramming.md	[Strings]	(@ref non-standard-string-literals)
./manual/metaprogramming.md	[`Int64`]	(@ref)
./manual/metaprogramming.md	[`eval`]	(@ref)
./manual/metaprogramming.md	[`eval`]	(@ref)
./manual/metaprogramming.md	[`sub2ind`]	(@ref)
./manual/methods.md	[Functions]	(@ref man-functions)
./manual/methods.md	[Composite Types]	(@ref)
./manual/methods.md	[`Float64`]	(@ref)
./manual/methods.md	[`MethodError`]	(@ref)
./manual/methods.md	[`Float64`]	(@ref)
./manual/methods.md	[`Number`]	(@ref)
./manual/methods.md	[`Float64`]	(@ref)
./manual/methods.md	[Conversion and Promotion]	(@ref conversion-and-promotion)
./manual/methods.md	[`MethodError`]	(@ref)
./manual/methods.md	[`methods`]	(@ref)
./manual/methods.md	[Method Ambiguities]	(@id man-ambiguities)
./manual/methods.md	[`MethodError`]	(@ref)
./manual/methods.md	[below]	(@ref man-method-design-ambiguities)
./manual/methods.md	[UnionAll Types]	(@ref)
./manual/methods.md	[`MethodError`]	(@ref)
./manual/methods.md	[Parametric Types]	(@ref)
./manual/methods.md	[UnionAll Types]	(@ref)
./manual/methods.md	[`Base.invokelatest`]	(@ref)
./manual/methods.md	[`convert`]	(@ref)
./manual/methods.md	[`similar`]	(@ref)
./manual/methods.md	[`copy!`]	(@ref)
./manual/methods.md	[`map`]	(@ref)
./manual/methods.md	[`promote`]	(@ref)
./manual/methods.md	[`Base.IndexStyle`]	(@ref)
./manual/methods.md	[Abstract Array Interface]	(@ref man-interface-array)
./manual/methods.md	[`promote`]	(@ref)
./manual/methods.md	[`promote_type`]	(@ref)
./manual/methods.md	[`promote_type`]	(@ref)
./manual/methods.md	[Varargs Functions]	(@ref)
./manual/methods.md	[Functions]	(@ref man-functions)
./manual/methods.md	[later in the manual]	(@ref constructors-and-conversion)
./manual/methods.md	[Method design and the avoidance of ambiguities]	(@id man-method-design-ambiguities)
./manual/methods.md	[ambiguities]	(@ref man-ambiguities)
./manual/methods.md	[Orthogonalize your design]	(@id man-methods-orthogonalize)
./manual/methods.md	[orthogonalize]	(@ref man-methods-orthogonalize)
./manual/modules.md	[Modules]	(@id modules)
./manual/modules.md	[`LOAD_PATH`]	(@ref)
./manual/modules.md	[`push!`]	(@ref)
./manual/modules.md	[`LOAD_PATH`]	(@ref)
./manual/modules.md	[`@__MODULE__`]	(@ref)
./manual/modules.md	[`eval`]	(@ref)
./manual/modules.md	[`workspace()`]	(@ref)
./manual/modules.md	[`Pkg.update`]	(@ref)
./manual/modules.md	[`Pkg.rm`]	(@ref)
./manual/modules.md	[`@__FILE__`]	(@ref)
./manual/modules.md	[`Pkg.build`]	(@ref)
./manual/networking-and-streams.md	[coroutine]	(@ref man-tasks)
./manual/networking-and-streams.md	[`read`]	(@ref)
./manual/networking-and-streams.md	[`write`]	(@ref)
./manual/networking-and-streams.md	[`write`]	(@ref)
./manual/networking-and-streams.md	[`STDOUT`]	(@ref)
./manual/networking-and-streams.md	[`write`]	(@ref)
./manual/networking-and-streams.md	[`read`]	(@ref)
./manual/networking-and-streams.md	[`STDIN`]	(@ref)
./manual/networking-and-streams.md	[`eachline`]	(@ref)
./manual/networking-and-streams.md	[`read`]	(@ref)
./manual/networking-and-streams.md	[`write`]	(@ref)
./manual/networking-and-streams.md	[`STDOUT`]	(@ref)
./manual/networking-and-streams.md	[`write`]	(@ref)
./manual/networking-and-streams.md	[`print`]	(@ref)
./manual/networking-and-streams.md	[`show`]	(@ref)
./manual/networking-and-streams.md	[`IOContext`]	(@ref)
./manual/networking-and-streams.md	[`showcompact`]	(@ref)
./manual/networking-and-streams.md	[`open`]	(@ref)
./manual/networking-and-streams.md	[`open`]	(@ref)
./manual/networking-and-streams.md	[`listen`]	(@ref)
./manual/networking-and-streams.md	[`accept`]	(@ref)
./manual/networking-and-streams.md	[`connect`]	(@ref)
./manual/networking-and-streams.md	[`accept`]	(@ref)
./manual/networking-and-streams.md	[`connect`]	(@ref)
./manual/networking-and-streams.md	[`connect`]	(@ref)
./manual/networking-and-streams.md	[`listen`]	(@ref)
./manual/networking-and-streams.md	[`connect`]	(@ref)
./manual/networking-and-streams.md	[`connect`]	(@ref)
./manual/networking-and-streams.md	[`connect`]	(@ref)
./manual/networking-and-streams.md	[`close`]	(@ref)
./manual/networking-and-streams.md	[`connect`]	(@ref)
./manual/networking-and-streams.md	[`listen`]	(@ref)
./manual/networking-and-streams.md	[`getaddrinfo`]	(@ref)
./manual/noteworthy-differences.md	[`push!`]	(@ref)
./manual/noteworthy-differences.md	[`append!`]	(@ref)
./manual/noteworthy-differences.md	[`im`]	(@ref)
./manual/noteworthy-differences.md	[the FAQ entry on domain errors]	(@ref faq-domain-errors)
./manual/noteworthy-differences.md	[`rand(N)`]	(@ref)
./manual/noteworthy-differences.md	[`vcat(x,y,z)`]	(@ref)
./manual/noteworthy-differences.md	[`hcat(x,y,z)`]	(@ref)
./manual/noteworthy-differences.md	[`hvcat`]	(@ref)
./manual/noteworthy-differences.md	[`collect(a:b)`]	(@ref)
./manual/noteworthy-differences.md	[`linspace`]	(@ref)
./manual/noteworthy-differences.md	[The return Keyword]	(@ref)
./manual/noteworthy-differences.md	[`sum`]	(@ref)
./manual/noteworthy-differences.md	[`prod`]	(@ref)
./manual/noteworthy-differences.md	[`max`]	(@ref)
./manual/noteworthy-differences.md	[`sort`]	(@ref)
./manual/noteworthy-differences.md	[`rand()`]	(@ref)
./manual/noteworthy-differences.md	[`println`]	(@ref)
./manual/noteworthy-differences.md	[`@printf`]	(@ref)
./manual/noteworthy-differences.md	[`<`]	(@ref)
./manual/noteworthy-differences.md	[`>`]	(@ref)
./manual/noteworthy-differences.md	[`&`]	(@ref)
./manual/noteworthy-differences.md	[`|`]	(@ref)
./manual/noteworthy-differences.md	[`⊻`]	(@ref xor)
./manual/noteworthy-differences.md	[`xor`]	(@ref)
./manual/noteworthy-differences.md	[`svd`]	(@ref)
./manual/noteworthy-differences.md	[`Dict`]	(@ref)
./manual/noteworthy-differences.md	[`filter`]	(@ref)
./manual/noteworthy-differences.md	[`filter!`]	(@ref)
./manual/noteworthy-differences.md	[`filter!`]	(@ref)
./manual/noteworthy-differences.md	[`BoundsError`]	(@ref)
./manual/noteworthy-differences.md	[`map`]	(@ref)
./manual/noteworthy-differences.md	[`mapslices`]	(@ref)
./manual/noteworthy-differences.md	[`*`]	(@ref)
./manual/noteworthy-differences.md	[`diag`]	(@ref)
./manual/noteworthy-differences.md	[`diagm`]	(@ref)
./manual/noteworthy-differences.md	[`hcat`]	(@ref)
./manual/noteworthy-differences.md	[`vcat`]	(@ref)
./manual/noteworthy-differences.md	[`hvcat`]	(@ref)
./manual/noteworthy-differences.md	[`collect(a:b)`]	(@ref)
./manual/noteworthy-differences.md	[`max`]	(@ref)
./manual/noteworthy-differences.md	[`min`]	(@ref)
./manual/noteworthy-differences.md	[`maximum`]	(@ref)
./manual/noteworthy-differences.md	[`minimum`]	(@ref)
./manual/noteworthy-differences.md	[`sum`]	(@ref)
./manual/noteworthy-differences.md	[`prod`]	(@ref)
./manual/noteworthy-differences.md	[`maximum`]	(@ref)
./manual/noteworthy-differences.md	[`minimum`]	(@ref)
./manual/noteworthy-differences.md	[`sort`]	(@ref)
./manual/noteworthy-differences.md	[`sort!`]	(@ref)
./manual/noteworthy-differences.md	[`filter`]	(@ref)
./manual/noteworthy-differences.md	[`filter!`]	(@ref)
./manual/noteworthy-differences.md	[`filter!`]	(@ref)
./manual/noteworthy-differences.md	[Performance Tips]	(@ref man-performance-tips)
./manual/noteworthy-differences.md	[dot operators]	(@ref man-dot-operators)
./manual/noteworthy-differences.md	[Performance Tips]	(@ref man-performance-tips)
./manual/noteworthy-differences.md	[`UInt8`]	(@ref)
./manual/noteworthy-differences.md	[`UInt16`]	(@ref)
./manual/noteworthy-differences.md	[`Float32`]	(@ref)
./manual/noteworthy-differences.md	[`Rational`]	(@ref)
./manual/noteworthy-differences.md	[`println`]	(@ref)
./manual/noteworthy-differences.md	[`@printf`]	(@ref)
./manual/noteworthy-differences.md	[`⊻`]	(@ref xor)
./manual/noteworthy-differences.md	[`xor`]	(@ref)
./manual/noteworthy-differences.md	[`^`]	(@ref)
./manual/noteworthy-differences.md	[`^`]	(@ref)
./manual/noteworthy-differences.md	[`⊻`]	(@ref xor)
./manual/noteworthy-differences.md	[`xor`]	(@ref)
./manual/packages.md	[`Pkg.status()`]	(@ref)
./manual/packages.md	[`Pkg.status()`]	(@ref)
./manual/packages.md	[`Pkg.installed()`]	(@ref)
./manual/packages.md	[`Pkg.resolve()`]	(@ref)
./manual/packages.md	[`Pkg.edit()`]	(@ref)
./manual/packages.md	[`Pkg.resolve()`]	(@ref)
./manual/packages.md	[`Pkg.add()`]	(@ref)
./manual/packages.md	[`Pkg.rm()`]	(@ref)
./manual/packages.md	[`Pkg.resolve()`]	(@ref)
./manual/packages.md	[`Pkg.add()`]	(@ref)
./manual/packages.md	[`Pkg.resolve()`]	(@ref)
./manual/packages.md	[`Pkg.resolve()`]	(@ref)
./manual/packages.md	[`Pkg.add("SHA")`]	(@ref)
./manual/packages.md	[`Pkg.add()`]	(@ref)
./manual/packages.md	[`Pkg.add()`]	(@ref)
./manual/packages.md	[Requirements Specification]	(@ref)
./manual/packages.md	[`Pkg.rm()`]	(@ref)
./manual/packages.md	[`Pkg.resolve()`]	(@ref)
./manual/packages.md	[`Pkg.add()`]	(@ref)
./manual/packages.md	[`Pkg.rm()`]	(@ref)
./manual/packages.md	[`Pkg.edit()`]	(@ref)
./manual/packages.md	[`Pkg.edit()`]	(@ref)
./manual/packages.md	[`Pkg.resolve()`]	(@ref)
./manual/packages.md	[`Pkg.edit()`]	(@ref)
./manual/packages.md	[`Pkg.add()`]	(@ref)
./manual/packages.md	[`Pkg.setprotocol!()`]	(@ref)
./manual/packages.md	[`Pkg.setprotocol!()`]	(@ref)
./manual/packages.md	[`Pkg.dir()`]	(@ref)
./manual/packages.md	[`Pkg.add()`]	(@ref)
./manual/packages.md	[`Pkg.build()`]	(@ref)
./manual/packages.md	[`Pkg.add()`]	(@ref)
./manual/packages.md	[`Pkg.rm()`]	(@ref)
./manual/packages.md	[`Pkg.clone(url)`]	(@ref)
./manual/packages.md	[Custom METADATA Repository]	(@ref)
./manual/packages.md	[`Pkg.update()`]	(@ref)
./manual/packages.md	[`Pkg.update()`]	(@ref)
./manual/packages.md	[`Pkg.clone()`]	(@ref)
./manual/packages.md	[`Pkg.update`]	(@ref)
./manual/packages.md	[`Pkg.checkout(pkg)`]	(@ref)
./manual/packages.md	[`Pkg.checkout(pkg,branch)`]	(@ref)
./manual/packages.md	[`Pkg.add()`]	(@ref)
./manual/packages.md	[`Pkg.checkout("Distributions")`]	(@ref)
./manual/packages.md	[`Pkg.status()`]	(@ref)
./manual/packages.md	[`Pkg.free(pkg)`]	(@ref)
./manual/packages.md	[`Pkg.update()`]	(@ref)
./manual/packages.md	[`Pkg.pin()`]	(@ref)
./manual/packages.md	[`Pkg.pin()`]	(@ref)
./manual/packages.md	[`Pkg.free()`]	(@ref)
./manual/packages.md	[`Pkg.update()`]	(@ref)
./manual/packages.md	[Initial Setup]	(@id man-initial-setup)
./manual/packages.md	[julia's shell mode]	(@ref man-shell-mode)
./manual/packages.md	[`Pkg.checkout("Foo")`]	(@ref)
./manual/packages.md	[Dirty packages]	(@ref)
./manual/packages.md	[`Pkg.dir("Foo")`]	(@ref)
./manual/packages.md	[more detail about branching]	(@ref man-branch-post-hoc)
./manual/packages.md	[`Pkg.test("Foo")`]	(@ref)
./manual/packages.md	[changes in the package code]	(@ref man-workflow-tips)
./manual/packages.md	[make sure you've set up your SSH keys]	(@ref man-initial-setup)
./manual/packages.md	[`Pkg.checkout("Foo", "fixbar")`]	(@ref)
./manual/packages.md	[Squashing]	(@ref man-squashing-and-rebasing)
./manual/packages.md	[`Pkg.add("Foo")`]	(@ref)
./manual/packages.md	[Making a branch *post hoc*]	(@id man-branch-post-hoc)
./manual/packages.md	[Squashing and rebasing]	(@id man-squashing-and-rebasing)
./manual/packages.md	[Requirements Specification]	(@ref)
./manual/packages.md	[`Pkg.clone()`]	(@ref)
./manual/packages.md	[Publishing METADATA manually]	(@ref)
./manual/packages.md	[version number literals]	(@ref man-version-number-literals)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`wait`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`remotecall`]	(@ref)
./manual/parallel-computing.md	[`remotecall`]	(@ref)
./manual/parallel-computing.md	[`remotecall`]	(@ref)
./manual/parallel-computing.md	[`@spawnat`]	(@ref)
./manual/parallel-computing.md	[`remotecall_fetch`]	(@ref)
./manual/parallel-computing.md	[`getindex(r,1,1)`]	(@ref)
./manual/parallel-computing.md	[equivalent]	(@ref man-array-indexing)
./manual/parallel-computing.md	[`remotecall`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[macro]	(@ref man-macros)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`@everywhere`]	(@ref)
./manual/parallel-computing.md	[`addprocs`]	(@ref)
./manual/parallel-computing.md	[`rmprocs`]	(@ref)
./manual/parallel-computing.md	[`workers`]	(@ref)
./manual/parallel-computing.md	[ClusterManagers]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[`norm`]	(@ref)
./manual/parallel-computing.md	[`clear!`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[`@parallel`]	(@ref)
./manual/parallel-computing.md	[Shared Arrays]	(@ref man-shared-arrays)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`@sync`]	(@ref)
./manual/parallel-computing.md	[`pmap`]	(@ref)
./manual/parallel-computing.md	[`pmap`]	(@ref)
./manual/parallel-computing.md	[`pmap`]	(@ref)
./manual/parallel-computing.md	[Tasks (aka Coroutines)]	(@ref man-tasks)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`wait`]	(@ref)
./manual/parallel-computing.md	[`pmap`]	(@ref)
./manual/parallel-computing.md	[`@async`]	(@ref)
./manual/parallel-computing.md	[`@spawn`]	(@ref)
./manual/parallel-computing.md	[`@sync`]	(@ref)
./manual/parallel-computing.md	[`remotecall_fetch`]	(@ref)
./manual/parallel-computing.md	[`Task`]	(@ref)
./manual/parallel-computing.md	[Control Flow]	(@ref)
./manual/parallel-computing.md	[`Channel`]	(@ref)
./manual/parallel-computing.md	[`put!`]	(@ref)
./manual/parallel-computing.md	[`take!`]	(@ref)
./manual/parallel-computing.md	[`Channel`]	(@ref)
./manual/parallel-computing.md	[`take!`]	(@ref)
./manual/parallel-computing.md	[`Channel`]	(@ref)
./manual/parallel-computing.md	[`put!`]	(@ref)
./manual/parallel-computing.md	[`isready`]	(@ref)
./manual/parallel-computing.md	[`wait`]	(@ref)
./manual/parallel-computing.md	[`Channel`]	(@ref)
./manual/parallel-computing.md	[`take!`]	(@ref)
./manual/parallel-computing.md	[`put!`]	(@ref)
./manual/parallel-computing.md	[`close`]	(@ref)
./manual/parallel-computing.md	[`Channel`]	(@ref)
./manual/parallel-computing.md	[`Channel`]	(@ref)
./manual/parallel-computing.md	[`put!`]	(@ref)
./manual/parallel-computing.md	[`take!`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`put!`]	(@ref)
./manual/parallel-computing.md	[`take!`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`isready`]	(@ref)
./manual/parallel-computing.md	[`wait`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`put!`]	(@ref)
./manual/parallel-computing.md	[`take!`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`isready`]	(@ref)
./manual/parallel-computing.md	[`wait`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`Channel`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`finalize`]	(@ref)
./manual/parallel-computing.md	[`RemoteChannel`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`fetch`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`Future`]	(@ref)
./manual/parallel-computing.md	[`finalize`]	(@ref)
./manual/parallel-computing.md	[Shared Arrays]	(@id man-shared-arrays)
./manual/parallel-computing.md	[`SharedArray`]	(@ref)
./manual/parallel-computing.md	[`SharedArray`]	(@ref)
./manual/parallel-computing.md	[`SharedArray`]	(@ref)
./manual/parallel-computing.md	[`SharedArray`]	(@ref)
./manual/parallel-computing.md	[`SharedArray`]	(@ref)
./manual/parallel-computing.md	[`Array`]	(@ref)
./manual/parallel-computing.md	[`SharedArray`]	(@ref)
./manual/parallel-computing.md	[`sdata`]	(@ref)
./manual/parallel-computing.md	[`sdata`]	(@ref)
./manual/parallel-computing.md	[`sdata`]	(@ref)
./manual/parallel-computing.md	[`SharedArrays.localindexes`]	(@ref)
./manual/parallel-computing.md	[`@parallel`]	(@ref)
./manual/parallel-computing.md	[`@time`]	(@ref)
./manual/parallel-computing.md	[`addprocs`]	(@ref)
./manual/parallel-computing.md	[`addprocs`]	(@ref)
./manual/parallel-computing.md	[`launch`]	(@ref)
./manual/parallel-computing.md	[`STDOUT`]	(@ref)
./manual/parallel-computing.md	[`STDOUT`]	(@ref)
./manual/parallel-computing.md	[`addprocs()`]	(@ref)
./manual/parallel-computing.md	[`addprocs(np::Integer)`]	(@ref)
./manual/parallel-computing.md	[`addprocs(hostnames::Array)`]	(@ref)
./manual/parallel-computing.md	[`launch`]	(@ref)
./manual/parallel-computing.md	[`manage`]	(@ref)
./manual/parallel-computing.md	[`addprocs(manager::FooManager)`]	(@ref addprocs)
./manual/parallel-computing.md	[`launch`]	(@ref)
./manual/parallel-computing.md	[`addprocs`]	(@ref)
./manual/parallel-computing.md	[`addprocs`]	(@ref)
./manual/parallel-computing.md	[`launch`]	(@ref)
./manual/parallel-computing.md	[`launch`]	(@ref)
./manual/parallel-computing.md	[`launch`]	(@ref)
./manual/parallel-computing.md	[`launch`]	(@ref)
./manual/parallel-computing.md	[`connect`]	(@ref)
./manual/parallel-computing.md	[`Base.cluster_cookie()`]	(@ref)
./manual/parallel-computing.md	[`Base.cluster_cookie()`]	(@ref)
./manual/parallel-computing.md	[`Threads.nthreads()`]	(@ref)
./manual/parallel-computing.md	[`Threads.threadid`]	(@ref)
./manual/parallel-computing.md	[`Threads.@threads`]	(@ref)
./manual/parallel-computing.md	[`Threads.@threads`]	(@ref)
./manual/parallel-computing.md	[`@parallel`]	(@ref)
./manual/parallel-computing.md	[`yield`]	(@ref)
./manual/parallel-computing.md	[`ccall`]	(@ref)
./manual/parallel-computing.md	[`yield`]	(@ref)
./manual/performance-tips.md	[Performance Tips]	(@id man-performance-tips)
./manual/performance-tips.md	[`@time`]	(@ref)
./manual/performance-tips.md	[`@time`]	(@ref)
./manual/performance-tips.md	[`@time`]	(@ref)
./manual/performance-tips.md	[tools]	(@ref tools)
./manual/performance-tips.md	[Pre-allocating outputs]	(@ref)
./manual/performance-tips.md	[Tools]	(@id tools)
./manual/performance-tips.md	[Profiling]	(@ref)
./manual/performance-tips.md	[`@time`]	(@ref)
./manual/performance-tips.md	[`@allocated`]	(@ref)
./manual/performance-tips.md	[Memory allocation analysis]	(@ref)
./manual/performance-tips.md	[`@code_warntype`]	(@ref)
./manual/performance-tips.md	[`Real`]	(@ref)
./manual/performance-tips.md	[`Float64`]	(@ref)
./manual/performance-tips.md	[Parametric Types]	(@ref)
./manual/performance-tips.md	[`UInt8`]	(@ref)
./manual/performance-tips.md	[`Float64`]	(@ref)
./manual/performance-tips.md	[`Int32`]	(@ref)
./manual/performance-tips.md	[`convert`]	(@ref)
./manual/performance-tips.md	[function-barrier technique]	(@ref kernal-functions)
./manual/performance-tips.md	[`one`]	(@ref)
./manual/performance-tips.md	[`oftype(x, y)`]	(@ref)
./manual/performance-tips.md	[`/`]	(@ref)
./manual/performance-tips.md	[Separate kernel functions (aka, function barriers)]	(@id kernal-functions)
./manual/performance-tips.md	[`fill!`]	(@ref)
./manual/performance-tips.md	[function-barrier technique]	(@ref kernal-functions)
./manual/performance-tips.md	["Value types"]	(@ref)
./manual/performance-tips.md	[`Vector`]	(@ref)
./manual/performance-tips.md	[`Matrix`]	(@ref)
./manual/performance-tips.md	[`repmat`]	(@ref)
./manual/performance-tips.md	[`Array`]	(@ref)
./manual/performance-tips.md	[dot syntax for vectorizing functions]	(@ref man-vectorized)
./manual/performance-tips.md	[dot syntax]	(@ref man-vectorized)
./manual/performance-tips.md	[`@.`]	(@ref @__dot__)
./manual/performance-tips.md	[`view`]	(@ref)
./manual/performance-tips.md	[`@views`]	(@ref)
./manual/performance-tips.md	[`@spawnat`]	(@ref)
./manual/performance-tips.md	[`fetch`]	(@ref)
./manual/performance-tips.md	[`wait`]	(@ref)
./manual/performance-tips.md	[`fetch`]	(@ref)
./manual/performance-tips.md	[`wait`]	(@ref)
./manual/performance-tips.md	[`abs2(z)`]	(@ref)
./manual/performance-tips.md	[`abs(z)^2`]	(@ref)
./manual/performance-tips.md	[`abs2`]	(@ref)
./manual/performance-tips.md	[`abs`]	(@ref)
./manual/performance-tips.md	[`div(x,y)`]	(@ref)
./manual/performance-tips.md	[`trunc(x/y)`]	(@ref)
./manual/performance-tips.md	[`fld(x,y)`]	(@ref)
./manual/performance-tips.md	[`floor(x/y)`]	(@ref)
./manual/performance-tips.md	[`cld(x,y)`]	(@ref)
./manual/performance-tips.md	[`ceil(x/y)`]	(@ref)
./manual/performance-tips.md	[Performance Annotations]	(@id man-performance-annotations)
./manual/performance-tips.md	[`ifelse`]	(@ref)
./manual/performance-tips.md	[`code_native`]	(@ref)
./manual/performance-tips.md	[`set_zero_subnormals(true)`]	(@ref)
./manual/performance-tips.md	[`set_zero_subnormals(false)`]	(@ref)
./manual/performance-tips.md	[[`@code_warntype`]	(@ref)
./manual/performance-tips.md	[`@code_warntype`]	(@ref)
./manual/performance-tips.md	[`code_warntype`]	(@ref)
./manual/performance-tips.md	[`@code_warntype`]	(@ref)
./manual/performance-tips.md	[`@code_lowered`]	(@ref)
./manual/performance-tips.md	[`@code_typed`]	(@ref)
./manual/performance-tips.md	[`@code_llvm`]	(@ref)
./manual/performance-tips.md	[`@code_native`]	(@ref)
./manual/performance-tips.md	[`Float64`]	(@ref)
./manual/performance-tips.md	[`@code_warntype`]	(@ref)
./manual/performance-tips.md	[`Float64`]	(@ref)
./manual/performance-tips.md	[`Int64`]	(@ref)
./manual/performance-tips.md	[`Float64`]	(@ref)
./manual/profile.md	[`@profile`]	(@ref)
./manual/profile.md	[`@profile`]	(@ref)
./manual/profile.md	[`@profile`]	(@ref)
./manual/profile.md	[`Profile.print()`]	(@ref)
./manual/profile.md	[`Profile.clear()`]	(@ref)
./manual/profile.md	[`Profile.print`]	(@ref)
./manual/profile.md	[`Profile.fetch()`]	(@ref)
./manual/profile.md	[`IOContext`]	(@ref)
./manual/profile.md	[`@profile`]	(@ref)
./manual/profile.md	[`Profile.print()`]	(@ref)
./manual/profile.md	[`@time`]	(@ref)
./manual/profile.md	[`@allocated`]	(@ref)
./manual/profile.md	[`Profile.clear_malloc_data()`]	(@ref)
./manual/running-external-programs.md	[`STDOUT`]	(@ref)
./manual/running-external-programs.md	[`STDOUT`]	(@ref)
./manual/running-external-programs.md	[`ErrorException`]	(@ref)
./manual/running-external-programs.md	[`read`]	(@ref)
./manual/running-external-programs.md	[`open`]	(@ref)
./manual/running-external-programs.md	[Interpolation]	(@id command-interpolation)
./manual/running-external-programs.md	[Strings]	(@ref)
./manual/running-external-programs.md	[`pipeline`]	(@ref)
./manual/running-external-programs.md	[`STDOUT`]	(@ref)
./manual/running-external-programs.md	[`STDOUT`]	(@ref)
./manual/stacktraces.md	[`stacktrace`]	(@ref)
./manual/stacktraces.md	[`stacktrace()`]	(@ref)
./manual/stacktraces.md	[`StackFrame`]	(@ref)
./manual/stacktraces.md	[`StackTrace`]	(@ref)
./manual/stacktraces.md	[`stacktrace()`]	(@ref)
./manual/stacktraces.md	[`stacktrace()`]	(@ref)
./manual/stacktraces.md	[`StackFrame`]	(@ref)
./manual/stacktraces.md	[`backtrace`]	(@ref)
./manual/stacktraces.md	[`stacktrace`]	(@ref)
./manual/stacktraces.md	[`stacktrace`]	(@ref)
./manual/stacktraces.md	[`catch_stacktrace`]	(@ref)
./manual/stacktraces.md	[`stacktrace`]	(@ref)
./manual/stacktraces.md	[`catch_stacktrace`]	(@ref)
./manual/stacktraces.md	[`backtrace`]	(@ref)
./manual/stacktraces.md	[`backtrace`]	(@ref)
./manual/stacktraces.md	[`stacktrace`]	(@ref)
./manual/stacktraces.md	[`backtrace`]	(@ref)
./manual/stacktraces.md	[`stacktrace`]	(@ref)
./manual/stacktraces.md	[`stacktrace`]	(@ref)
./manual/stacktraces.md	[`backtrace`]	(@ref)
./manual/stacktraces.md	[`StackFrame`]	(@ref)
./manual/stacktraces.md	[`StackTraces.lookup`]	(@ref)
./manual/strings.md	[Strings]	(@id man-strings)
./manual/strings.md	[`String`]	(@ref)
./manual/strings.md	[`transcode`]	(@ref)
./manual/strings.md	[Characters]	(@id man-characters)
./manual/strings.md	[`typeof(ans)`]	(@ref)
./manual/strings.md	[`Int32`]	(@ref)
./manual/strings.md	[`isvalid`]	(@ref)
./manual/strings.md	[`endof(str)`]	(@ref)
./manual/strings.md	[`SubString`]	(@ref)
./manual/strings.md	[`chop`]	(@ref)
./manual/strings.md	[`chomp`]	(@ref)
./manual/strings.md	[`strip`]	(@ref)
./manual/strings.md	[`SubString`]	(@ref)
./manual/strings.md	[discussed above]	(@ref man-characters)
./manual/strings.md	[`nextind(s,1)`]	(@ref)
./manual/strings.md	[`length(s)`]	(@ref)
./manual/strings.md	[`endof(s)`]	(@ref)
./manual/strings.md	[byte array literals]	(@ref man-byte-array-literals)
./manual/strings.md	[`transcode`]	(@ref)
./manual/strings.md	[Interpolation]	(@id string-interpolation)
./manual/strings.md	[`string`]	(@ref)
./manual/strings.md	[`string`]	(@ref)
./manual/strings.md	[`string`]	(@ref)
./manual/strings.md	[`search`]	(@ref)
./manual/strings.md	[`contains`]	(@ref)
./manual/strings.md	[`contains`]	(@ref)
./manual/strings.md	[`repeat`]	(@ref)
./manual/strings.md	[`join`]	(@ref)
./manual/strings.md	[`endof(str)`]	(@ref)
./manual/strings.md	[`length(str)`]	(@ref)
./manual/strings.md	[`i = start(str)`]	(@ref start)
./manual/strings.md	[`c, j = next(str,i)`]	(@ref next)
./manual/strings.md	[`start`]	(@ref)
./manual/strings.md	[`endof`]	(@ref)
./manual/strings.md	[`ind2chr(str,i)`]	(@ref)
./manual/strings.md	[`chr2ind(str,j)`]	(@ref)
./manual/strings.md	[Non-Standard String Literals]	(@id non-standard-string-literals)
./manual/strings.md	[non-standard string literals]	(@ref)
./manual/strings.md	[Metaprogramming]	(@ref)
./manual/strings.md	[`ismatch`]	(@ref)
./manual/strings.md	[`ismatch`]	(@ref)
./manual/strings.md	[`match`]	(@ref)
./manual/strings.md	[`match`]	(@ref)
./manual/strings.md	[`match`]	(@ref)
./manual/strings.md	[`match`]	(@ref)
./manual/strings.md	[`replace`]	(@ref)
./manual/strings.md	[Byte Array Literals]	(@id man-byte-array-literals)
./manual/strings.md	[`UInt8`]	(@ref)
./manual/strings.md	[Version Number Literals]	(@id man-version-number-literals)
./manual/strings.md	[`VERSION`]	(@ref)
./manual/strings.md	[Raw String Literals]	(@id man-raw-string-literals)
./manual/style-guide.md	[`pi`]	(@ref)
./manual/style-guide.md	[`Int32`]	(@ref)
./manual/style-guide.md	[`Integer`]	(@ref)
./manual/style-guide.md	[`MethodError`]	(@ref)
./manual/style-guide.md	[`oneunit`]	(@ref)
./manual/style-guide.md	[`+`]	(@ref)
./manual/style-guide.md	[`sort`]	(@ref)
./manual/style-guide.md	[`sort!`]	(@ref)
./manual/style-guide.md	[`push!`]	(@ref)
./manual/style-guide.md	[`pop!`]	(@ref)
./manual/style-guide.md	[`splice!`]	(@ref)
./manual/style-guide.md	[Nullable types]	(@ref man-nullable-types)
./manual/style-guide.md	[`maximum`]	(@ref)
./manual/style-guide.md	[`convert`]	(@ref)
./manual/style-guide.md	[`isequal`]	(@ref)
./manual/style-guide.md	[`haskey`]	(@ref)
./manual/style-guide.md	[`remotecall_fetch`]	(@ref)
./manual/style-guide.md	[`sum_kbn`]	(@ref)
./manual/style-guide.md	[`indexin`]	(@ref)
./manual/style-guide.md	[`collect(a)`]	(@ref)
./manual/style-guide.md	[`typeof(x)`]	(@ref)
./manual/style-guide.md	[Avoid fields with abstract containers]	(@ref)
./manual/style-guide.md	[`eval`]	(@ref)
./manual/style-guide.md	[`isa`]	(@ref)
./manual/style-guide.md	[`<:`]	(@ref)
./manual/style-guide.md	[`map(f, a)`]	(@ref)
./manual/style-guide.md	[`Rational`]	(@ref)
./manual/style-guide.md	[`Float64`]	(@ref)
./manual/types.md	[Types]	(@id man-types)
./manual/types.md	[Methods]	(@ref)
./manual/types.md	[`isbits`]	(@ref)
./manual/types.md	[`convert`]	(@ref)
./manual/types.md	[Integers and Floating-Point Numbers]	(@ref)
./manual/types.md	[`Int8`]	(@ref)
./manual/types.md	[`UInt8`]	(@ref)
./manual/types.md	[`Int16`]	(@ref)
./manual/types.md	[`UInt16`]	(@ref)
./manual/types.md	[`Int32`]	(@ref)
./manual/types.md	[`UInt32`]	(@ref)
./manual/types.md	[`Int64`]	(@ref)
./manual/types.md	[`UInt64`]	(@ref)
./manual/types.md	[`Int128`]	(@ref)
./manual/types.md	[`UInt128`]	(@ref)
./manual/types.md	[`Float16`]	(@ref)
./manual/types.md	[`Float32`]	(@ref)
./manual/types.md	[`Float64`]	(@ref)
./manual/types.md	[`Number`]	(@ref)
./manual/types.md	[`Real`]	(@ref)
./manual/types.md	[`Integer`]	(@ref)
./manual/types.md	[`AbstractFloat`]	(@ref)
./manual/types.md	[`Signed`]	(@ref)
./manual/types.md	[`Unsigned`]	(@ref)
./manual/types.md	[Methods]	(@ref)
./manual/types.md	[Performance Tips]	(@ref man-performance-tips)
./manual/types.md	[`Bool`]	(@ref)
./manual/types.md	[`Integer`]	(@ref)
./manual/types.md	[`Bool`]	(@ref)
./manual/types.md	[`Int8`]	(@ref)
./manual/types.md	[`UInt8`]	(@ref)
./manual/types.md	[`Bool`]	(@ref)
./manual/types.md	[`Integer`]	(@ref)
./manual/types.md	[`Int8`]	(@ref)
./manual/types.md	[`Signed`]	(@ref)
./manual/types.md	[`UInt8`]	(@ref)
./manual/types.md	[`Unsigned`]	(@ref)
./manual/types.md	[`Bool`]	(@ref)
./manual/types.md	[`Int8`]	(@ref)
./manual/types.md	[`UInt8`]	(@ref)
./manual/types.md	[`Bool`]	(@ref)
./manual/types.md	[`Int8`]	(@ref)
./manual/types.md	[`UInt8`]	(@ref)
./manual/types.md	[Methods]	(@ref)
./manual/types.md	[`convert`]	(@ref)
./manual/types.md	[below]	(@ref man-singleton-types)
./manual/types.md	[Parametric Types]	(@ref)
./manual/types.md	[Methods]	(@ref)
./manual/types.md	[Constructors]	(@ref man-constructors)
./manual/types.md	[`Float64`]	(@ref)
./manual/types.md	[Strings]	(@ref)
./manual/types.md	[`Real`]	(@ref)
./manual/types.md	[`Real`]	(@ref)
./manual/types.md	[`Real`]	(@ref)
./manual/types.md	[UnionAll Types]	(@ref)
./manual/types.md	[Methods]	(@ref)
./manual/types.md	[Constructors]	(@ref man-constructors)
./manual/types.md	[`Float64`]	(@ref)
./manual/types.md	[`MethodError`]	(@ref)
./manual/types.md	[Constructors]	(@ref man-constructors)
./manual/types.md	[UnionAll Types]	(@ref)
./manual/types.md	[Methods]	(@ref)
./manual/types.md	[`Real`]	(@ref)
./manual/types.md	[`Rational`]	(@ref)
./manual/types.md	[`Integer`]	(@ref)
./manual/types.md	[`Rational`]	(@ref)
./manual/types.md	[`Real`]	(@ref)
./manual/types.md	[Varargs Functions]	(@ref)
./manual/types.md	[Singleton Types]	(@id man-singleton-types)
./manual/types.md	[`isa(A,Type{B})`]	(@ref)
./manual/types.md	[Parametric Methods]	(@ref)
./manual/types.md	[conversions]	(@ref conversion-and-promotion)
./manual/types.md	[`Integer`]	(@ref)
./manual/types.md	[`Number`]	(@ref)
./manual/types.md	[`Real`]	(@ref)
./manual/types.md	[`UInt32`]	(@ref)
./manual/types.md	[`UInt64`]	(@ref)
./manual/types.md	[`Int32`]	(@ref)
./manual/types.md	[`Int64`]	(@ref)
./manual/types.md	[`AbstractFloat`]	(@ref)
./manual/types.md	[`isa`]	(@ref)
./manual/types.md	[`typeof`]	(@ref)
./manual/types.md	[`supertype`]	(@ref)
./manual/types.md	[`supertype`]	(@ref)
./manual/types.md	[`MethodError`]	(@ref)
./manual/types.md	[`show`]	(@ref)
./manual/types.md	[`Real`]	(@ref)
./manual/types.md	[Constructors]	(@ref man-constructors)
./manual/types.md	[Conversion and Promotion]	(@ref conversion-and-promotion)
./manual/types.md	[`Number`]	(@ref)
./manual/types.md	[Networking and Streams]	(@ref)
./manual/types.md	[`print`]	(@ref)
./manual/types.md	[Multimedia I/O]	(@ref)
./manual/types.md	[`display`]	(@ref)
./manual/types.md	[Multimedia I/O]	(@ref)
./manual/types.md	[Operator Precedence and Associativity]	(@ref)
./manual/types.md	[`Float64`]	(@ref)
./manual/types.md	[the performance tips]	(@ref man-performance-tips)
./manual/types.md	[Nullable Types: Representing Missing Values]	(@id man-nullable-types)
./manual/types.md	[`Nullable{T}`]	(@ref)
./manual/types.md	[`NullException`]	(@ref)
./manual/types.md	[`Nullable`]	(@ref)
./manual/types.md	[`isnull`]	(@ref)
./manual/types.md	[`get`]	(@ref)
./manual/types.md	[`NullException`]	(@ref)
./manual/types.md	[`convert`]	(@ref)
./manual/types.md	[`isnull`]	(@ref)
./manual/types.md	[`map`]	(@ref)
./manual/types.md	[`filter`]	(@ref)
./manual/types.md	[`broadcast`]	(@ref)
./manual/variables-and-scoping.md	[Scope of Variables]	(@id scope-of-variables)
./manual/variables-and-scoping.md	[]	(@id man-scope-table)
./manual/variables-and-scoping.md	[begin blocks]	(@ref man-compound-expressions)
./manual/variables-and-scoping.md	[if blocks]	(@ref man-conditional-evaluation)
./manual/variables-and-scoping.md	[using or import]	(@ref modules)
./manual/variables-and-scoping.md	[table]	(@ref man-scope-table)
./manual/variables-and-scoping.md	[Function section]	(@ref man-functions)
./manual/variables-and-scoping.md	[`iseven`]	(@ref)
./manual/variables-and-scoping.md	[`isodd`]	(@ref)
./manual/variables-and-scoping.md	[Comprehensions]	(@ref)
./manual/variables.md	[Style Guide]	(@ref)
./manual/workflow-tips.md	[Workflow Tips]	(@id man-workflow-tips)
./manual/workflow-tips.md	[Interacting With Julia]	(@ref)
./stdlib/arrays.md	[Arrays]	(@id lib-arrays)
./stdlib/arrays.md	[dot syntax for vectorizing functions]	(@ref man-vectorized)
./stdlib/arrays.md	[`BitArray`]	(@ref)
./stdlib/arrays.md	[Sparse Vectors and Matrices]	(@id stdlib-sparse-arrays)
./stdlib/collections.md	[Iteration]	(@id lib-collections-iteration)
./stdlib/collections.md	[`start`]	(@ref)
./stdlib/collections.md	[`done`]	(@ref)
./stdlib/collections.md	[`next`]	(@ref)
./stdlib/collections.md	[manual section on the iteration interface]	(@ref man-interface-iteration)
./stdlib/collections.md	[`AbstractArray`]	(@ref)
./stdlib/collections.md	[`BitSet`]	(@ref)
./stdlib/collections.md	[`ObjectIdDict`]	(@ref)
./stdlib/collections.md	[`Dict`]	(@ref)
./stdlib/collections.md	[`WeakKeyDict`]	(@ref)
./stdlib/collections.md	[`Set`]	(@ref)
./stdlib/collections.md	[`Pair`]	(@ref)
./stdlib/collections.md	[`AbstractArray`]	(@ref)
./stdlib/collections.md	[`BitSet`]	(@ref)
./stdlib/collections.md	[`ObjectIdDict`]	(@ref)
./stdlib/collections.md	[`Dict`]	(@ref)
./stdlib/collections.md	[`WeakKeyDict`]	(@ref)
./stdlib/collections.md	[`Set`]	(@ref)
./stdlib/collections.md	[`Array`]	(@ref)
./stdlib/collections.md	[`BitArray`]	(@ref)
./stdlib/collections.md	[`AbstractArray`]	(@ref)
./stdlib/collections.md	[`Dict`]	(@ref)
./stdlib/collections.md	[`ObjectIdDict`]	(@ref)
./stdlib/collections.md	[`WeakKeyDict`]	(@ref)
./stdlib/collections.md	[`Dict`]	(@ref)
./stdlib/collections.md	[`hash`]	(@ref)
./stdlib/collections.md	[`isequal`]	(@ref)
./stdlib/collections.md	[`ObjectIdDict`]	(@ref)
./stdlib/collections.md	[`WeakKeyDict`]	(@ref)
./stdlib/collections.md	[`Dict`]	(@ref)
./stdlib/collections.md	[`Dict`]	(@ref)
./stdlib/collections.md	[`ObjectIdDict`]	(@ref)
./stdlib/collections.md	[`Dict`]	(@ref)
./stdlib/collections.md	[`WeakKeyDict`]	(@ref)
./stdlib/collections.md	[`BitSet`]	(@ref)
./stdlib/collections.md	[`Set`]	(@ref)
./stdlib/collections.md	[`EnvDict`]	(@ref Base.EnvDict)
./stdlib/collections.md	[`Array`]	(@ref)
./stdlib/collections.md	[`BitArray`]	(@ref)
./stdlib/collections.md	[`BitSet`]	(@ref)
./stdlib/collections.md	[`Set`]	(@ref)
./stdlib/collections.md	[`Array`]	(@ref)
./stdlib/collections.md	[`Array`]	(@ref)
./stdlib/collections.md	[`BitArray`]	(@ref)
./stdlib/constants.md	[Constants]	(@id lib-constants)
./stdlib/constants.md	[`STDIN`]	(@ref)
./stdlib/constants.md	[`STDOUT`]	(@ref)
./stdlib/constants.md	[`STDERR`]	(@ref)
./stdlib/constants.md	[`ENV`]	(@ref)
./stdlib/constants.md	[`ENDIAN_BOM`]	(@ref)
./stdlib/constants.md	[`Libdl.DL_LOAD_PATH`]	(@ref)
./stdlib/constants.md	[`Libdl.RTLD_DEEPBIND`]	(@ref Base.Libdl.RTLD_NOW)
./stdlib/constants.md	[`Libdl.RTLD_LOCAL`]	(@ref Base.Libdl.RTLD_NOW)
./stdlib/constants.md	[`Libdl.RTLD_NOLOAD`]	(@ref Base.Libdl.RTLD_NOW)
./stdlib/constants.md	[`Libdl.RTLD_LAZY`]	(@ref Base.Libdl.RTLD_NOW)
./stdlib/constants.md	[`Libdl.RTLD_NOW`]	(@ref)
./stdlib/constants.md	[`Libdl.RTLD_GLOBAL`]	(@ref Base.Libdl.RTLD_NOW)
./stdlib/constants.md	[`Libdl.RTLD_NODELETE`]	(@ref Base.Libdl.RTLD_NOW)
./stdlib/constants.md	[`Libdl.RTLD_FIRST`]	(@ref Base.Libdl.RTLD_NOW)
./stdlib/dates.md	[Dates and Time]	(@id stdlib-dates)
./stdlib/index.md	[Essentials]	(@ref)
./stdlib/index.md	[Collections and Data Structures]	(@ref)
./stdlib/index.md	[Mathematics]	(@ref)
./stdlib/index.md	[Numbers]	(@ref lib-numbers)
./stdlib/index.md	[Strings]	(@ref lib-strings)
./stdlib/index.md	[Arrays]	(@ref lib-arrays)
./stdlib/index.md	[Tasks and Parallel Computing]	(@ref)
./stdlib/index.md	[Linear Algebra]	(@ref)
./stdlib/index.md	[Constants]	(@ref lib-constants)
./stdlib/index.md	[Filesystem]	(@ref)
./stdlib/index.md	[Delimited Files]	(@ref)
./stdlib/index.md	[I/O and Network]	(@ref)
./stdlib/index.md	[Punctuation]	(@ref)
./stdlib/index.md	[Sorting and Related Functions]	(@ref)
./stdlib/index.md	[Package Manager Functions]	(@ref)
./stdlib/index.md	[Dates and Time]	(@ref stdlib-dates)
./stdlib/index.md	[Iteration utilities]	(@ref)
./stdlib/index.md	[Unit Testing]	(@ref)
./stdlib/index.md	[C Interface]	(@ref)
./stdlib/index.md	[LLVM Interface]	(@ref)
./stdlib/index.md	[C Standard Library]	(@ref)
./stdlib/index.md	[Dynamic Linker]	(@ref)
./stdlib/index.md	[StackTraces]	(@ref)
./stdlib/index.md	[SIMD Support]	(@ref)
./stdlib/index.md	[Profiling]	(@ref lib-profiling)
./stdlib/index.md	[Memory-mapped I/O]	(@ref)
./stdlib/index.md	[Shared Arrays]	(@ref)
./stdlib/index.md	[Base64]	(@ref)
./stdlib/index.md	[File Events]	(@ref lib-filewatching)
./stdlib/index.md	[Iterative Eigensolvers]	(@ref lib-itereigen)
./stdlib/io-network.md	[`print`]	(@ref)
./stdlib/io-network.md	[`show`]	(@ref)
./stdlib/io-network.md	[`display(x)`]	(@ref)
./stdlib/io-network.md	[`show`]	(@ref)
./stdlib/io-network.md	[`pushdisplay`]	(@ref)
./stdlib/io-network.md	[`display(x)`]	(@ref)
./stdlib/io-network.md	[`reprmime(mime, x)`]	(@ref)
./stdlib/io-network.md	[`reprmime`]	(@ref)
./stdlib/io-network.md	[`mimewritable(mime, x)`]	(@ref)
./stdlib/io-network.md	[`redisplay(d::D, ...)`]	(@ref Base.Multimedia.redisplay)
./stdlib/io-network.md	[`display(x)`]	(@ref)
./stdlib/linalg.md	[`Ac_ldiv_B`]	(@ref)
./stdlib/linalg.md	[`A_mul_B!`]	(@ref)
./stdlib/linalg.md	[`Float64`]	(@ref)
./stdlib/linalg.md	[`Float32`]	(@ref)
./stdlib/linalg.md	[BLAS Character Arguments]	(@id stdlib-blas-chars)
./stdlib/linalg.md	[Multplication Order]	(@id stdlib-blas-side)
./stdlib/linalg.md	[Triangle Referencing]	(@id stdlib-blas-uplo)
./stdlib/linalg.md	[Transposition Operation]	(@id stdlib-blas-trans)
./stdlib/linalg.md	[Unit Diagonal]	(@id stdlib-blas-diag)
./stdlib/linalg.md	[`Float64`]	(@ref)
./stdlib/linalg.md	[`Float32`]	(@ref)
./stdlib/math.md	[Mathematical Operators]	(@id math-ops)
./stdlib/numbers.md	[Numbers]	(@id lib-numbers)
./stdlib/numbers.md	[`BigFloat`]	(@ref)
./stdlib/numbers.md	[`Float16`]	(@ref)
./stdlib/numbers.md	[`Float32`]	(@ref)
./stdlib/numbers.md	[`Float64`]	(@ref)
./stdlib/numbers.md	[`BigFloat`]	(@ref)
./stdlib/numbers.md	[`Bool`]	(@ref)
./stdlib/numbers.md	[`Int8`]	(@ref)
./stdlib/numbers.md	[`UInt8`]	(@ref)
./stdlib/numbers.md	[`Int16`]	(@ref)
./stdlib/numbers.md	[`UInt16`]	(@ref)
./stdlib/numbers.md	[`Int32`]	(@ref)
./stdlib/numbers.md	[`UInt32`]	(@ref)
./stdlib/numbers.md	[`Int64`]	(@ref)
./stdlib/numbers.md	[`UInt64`]	(@ref)
./stdlib/numbers.md	[`Int128`]	(@ref)
./stdlib/numbers.md	[`UInt128`]	(@ref)
./stdlib/numbers.md	[`BigInt`]	(@ref)
./stdlib/pkg.md	[`Pkg.status()`]	(@ref)
./stdlib/pkg.md	[`Pkg.dir()`]	(@ref)
./stdlib/profile.md	[Profiling]	(@id lib-profiling)
./stdlib/punctuation.md	[here]	(@ref math-ops)
./stdlib/punctuation.md	[`subtype operator`]	(@ref <:)
./stdlib/punctuation.md	[`supertype operator`]	(@ref >:)
./stdlib/punctuation.md	[`egal comparison operator`]	(@ref ===)
./stdlib/strings.md	[Strings]	(@id lib-strings)
./tittles.txt	[`throw`]	(@ref)
./tittles.txt	[`eval`]	(@ref)
./tittles.txt	[`@time`]	(@ref)
./tittles.txt	[[`@code_warntype`]	(@ref)
./tittles.txt	[`backtrace`]	(@ref)
./tittles.txt	[`Nullable`]	(@ref)
